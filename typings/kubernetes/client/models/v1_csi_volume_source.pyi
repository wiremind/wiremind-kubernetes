"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1CSIVolumeSource:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, driver=..., fs_type=..., node_publish_secret_ref=..., read_only=..., volume_attributes=..., local_vars_configuration=...) -> None:
        """V1CSIVolumeSource - a model defined in OpenAPI"""
        ...
    
    @property
    def driver(self): # -> None:
        """Gets the driver of this V1CSIVolumeSource.  # noqa: E501

        driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.  # noqa: E501

        :return: The driver of this V1CSIVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @driver.setter
    def driver(self, driver): # -> None:
        """Sets the driver of this V1CSIVolumeSource.

        driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.  # noqa: E501

        :param driver: The driver of this V1CSIVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def fs_type(self): # -> None:
        """Gets the fs_type of this V1CSIVolumeSource.  # noqa: E501

        fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.  # noqa: E501

        :return: The fs_type of this V1CSIVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @fs_type.setter
    def fs_type(self, fs_type): # -> None:
        """Sets the fs_type of this V1CSIVolumeSource.

        fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.  # noqa: E501

        :param fs_type: The fs_type of this V1CSIVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def node_publish_secret_ref(self): # -> None:
        """Gets the node_publish_secret_ref of this V1CSIVolumeSource.  # noqa: E501


        :return: The node_publish_secret_ref of this V1CSIVolumeSource.  # noqa: E501
        :rtype: V1LocalObjectReference
        """
        ...
    
    @node_publish_secret_ref.setter
    def node_publish_secret_ref(self, node_publish_secret_ref): # -> None:
        """Sets the node_publish_secret_ref of this V1CSIVolumeSource.


        :param node_publish_secret_ref: The node_publish_secret_ref of this V1CSIVolumeSource.  # noqa: E501
        :type: V1LocalObjectReference
        """
        ...
    
    @property
    def read_only(self): # -> None:
        """Gets the read_only of this V1CSIVolumeSource.  # noqa: E501

        readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).  # noqa: E501

        :return: The read_only of this V1CSIVolumeSource.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @read_only.setter
    def read_only(self, read_only): # -> None:
        """Sets the read_only of this V1CSIVolumeSource.

        readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).  # noqa: E501

        :param read_only: The read_only of this V1CSIVolumeSource.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def volume_attributes(self): # -> None:
        """Gets the volume_attributes of this V1CSIVolumeSource.  # noqa: E501

        volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.  # noqa: E501

        :return: The volume_attributes of this V1CSIVolumeSource.  # noqa: E501
        :rtype: dict(str, str)
        """
        ...
    
    @volume_attributes.setter
    def volume_attributes(self, volume_attributes): # -> None:
        """Sets the volume_attributes of this V1CSIVolumeSource.

        volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.  # noqa: E501

        :param volume_attributes: The volume_attributes of this V1CSIVolumeSource.  # noqa: E501
        :type: dict(str, str)
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


