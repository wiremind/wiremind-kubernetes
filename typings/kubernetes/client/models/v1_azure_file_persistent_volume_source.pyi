"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1AzureFilePersistentVolumeSource:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, read_only=..., secret_name=..., secret_namespace=..., share_name=..., local_vars_configuration=...) -> None:
        """V1AzureFilePersistentVolumeSource - a model defined in OpenAPI"""
        ...
    
    @property
    def read_only(self): # -> None:
        """Gets the read_only of this V1AzureFilePersistentVolumeSource.  # noqa: E501

        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  # noqa: E501

        :return: The read_only of this V1AzureFilePersistentVolumeSource.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @read_only.setter
    def read_only(self, read_only): # -> None:
        """Sets the read_only of this V1AzureFilePersistentVolumeSource.

        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  # noqa: E501

        :param read_only: The read_only of this V1AzureFilePersistentVolumeSource.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def secret_name(self): # -> None:
        """Gets the secret_name of this V1AzureFilePersistentVolumeSource.  # noqa: E501

        secretName is the name of secret that contains Azure Storage Account Name and Key  # noqa: E501

        :return: The secret_name of this V1AzureFilePersistentVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @secret_name.setter
    def secret_name(self, secret_name): # -> None:
        """Sets the secret_name of this V1AzureFilePersistentVolumeSource.

        secretName is the name of secret that contains Azure Storage Account Name and Key  # noqa: E501

        :param secret_name: The secret_name of this V1AzureFilePersistentVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def secret_namespace(self): # -> None:
        """Gets the secret_namespace of this V1AzureFilePersistentVolumeSource.  # noqa: E501

        secretNamespace is the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod  # noqa: E501

        :return: The secret_namespace of this V1AzureFilePersistentVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @secret_namespace.setter
    def secret_namespace(self, secret_namespace): # -> None:
        """Sets the secret_namespace of this V1AzureFilePersistentVolumeSource.

        secretNamespace is the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod  # noqa: E501

        :param secret_namespace: The secret_namespace of this V1AzureFilePersistentVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def share_name(self): # -> None:
        """Gets the share_name of this V1AzureFilePersistentVolumeSource.  # noqa: E501

        shareName is the azure Share Name  # noqa: E501

        :return: The share_name of this V1AzureFilePersistentVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @share_name.setter
    def share_name(self, share_name): # -> None:
        """Sets the share_name of this V1AzureFilePersistentVolumeSource.

        shareName is the azure Share Name  # noqa: E501

        :param share_name: The share_name of this V1AzureFilePersistentVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


