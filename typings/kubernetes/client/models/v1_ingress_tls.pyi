"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1IngressTLS:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, hosts=..., secret_name=..., local_vars_configuration=...) -> None:
        """V1IngressTLS - a model defined in OpenAPI"""
        ...
    
    @property
    def hosts(self): # -> None:
        """Gets the hosts of this V1IngressTLS.  # noqa: E501

        Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.  # noqa: E501

        :return: The hosts of this V1IngressTLS.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @hosts.setter
    def hosts(self, hosts): # -> None:
        """Sets the hosts of this V1IngressTLS.

        Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.  # noqa: E501

        :param hosts: The hosts of this V1IngressTLS.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def secret_name(self): # -> None:
        """Gets the secret_name of this V1IngressTLS.  # noqa: E501

        SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.  # noqa: E501

        :return: The secret_name of this V1IngressTLS.  # noqa: E501
        :rtype: str
        """
        ...
    
    @secret_name.setter
    def secret_name(self, secret_name): # -> None:
        """Sets the secret_name of this V1IngressTLS.

        SecretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.  # noqa: E501

        :param secret_name: The secret_name of this V1IngressTLS.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


