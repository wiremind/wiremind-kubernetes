"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1CustomResourceDefinitionVersion:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, additional_printer_columns=..., deprecated=..., deprecation_warning=..., name=..., schema=..., served=..., storage=..., subresources=..., local_vars_configuration=...) -> None:
        """V1CustomResourceDefinitionVersion - a model defined in OpenAPI"""
        ...
    
    @property
    def additional_printer_columns(self): # -> None:
        """Gets the additional_printer_columns of this V1CustomResourceDefinitionVersion.  # noqa: E501

        additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.  # noqa: E501

        :return: The additional_printer_columns of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :rtype: list[V1CustomResourceColumnDefinition]
        """
        ...
    
    @additional_printer_columns.setter
    def additional_printer_columns(self, additional_printer_columns): # -> None:
        """Sets the additional_printer_columns of this V1CustomResourceDefinitionVersion.

        additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.  # noqa: E501

        :param additional_printer_columns: The additional_printer_columns of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :type: list[V1CustomResourceColumnDefinition]
        """
        ...
    
    @property
    def deprecated(self): # -> None:
        """Gets the deprecated of this V1CustomResourceDefinitionVersion.  # noqa: E501

        deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.  # noqa: E501

        :return: The deprecated of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @deprecated.setter
    def deprecated(self, deprecated): # -> None:
        """Sets the deprecated of this V1CustomResourceDefinitionVersion.

        deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.  # noqa: E501

        :param deprecated: The deprecated of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def deprecation_warning(self): # -> None:
        """Gets the deprecation_warning of this V1CustomResourceDefinitionVersion.  # noqa: E501

        deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.  # noqa: E501

        :return: The deprecation_warning of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :rtype: str
        """
        ...
    
    @deprecation_warning.setter
    def deprecation_warning(self, deprecation_warning): # -> None:
        """Sets the deprecation_warning of this V1CustomResourceDefinitionVersion.

        deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.  # noqa: E501

        :param deprecation_warning: The deprecation_warning of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def name(self): # -> None:
        """Gets the name of this V1CustomResourceDefinitionVersion.  # noqa: E501

        name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.  # noqa: E501

        :return: The name of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :rtype: str
        """
        ...
    
    @name.setter
    def name(self, name): # -> None:
        """Sets the name of this V1CustomResourceDefinitionVersion.

        name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.  # noqa: E501

        :param name: The name of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def schema(self): # -> None:
        """Gets the schema of this V1CustomResourceDefinitionVersion.  # noqa: E501


        :return: The schema of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :rtype: V1CustomResourceValidation
        """
        ...
    
    @schema.setter
    def schema(self, schema): # -> None:
        """Sets the schema of this V1CustomResourceDefinitionVersion.


        :param schema: The schema of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :type: V1CustomResourceValidation
        """
        ...
    
    @property
    def served(self): # -> None:
        """Gets the served of this V1CustomResourceDefinitionVersion.  # noqa: E501

        served is a flag enabling/disabling this version from being served via REST APIs  # noqa: E501

        :return: The served of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @served.setter
    def served(self, served): # -> None:
        """Sets the served of this V1CustomResourceDefinitionVersion.

        served is a flag enabling/disabling this version from being served via REST APIs  # noqa: E501

        :param served: The served of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def storage(self): # -> None:
        """Gets the storage of this V1CustomResourceDefinitionVersion.  # noqa: E501

        storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.  # noqa: E501

        :return: The storage of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @storage.setter
    def storage(self, storage): # -> None:
        """Sets the storage of this V1CustomResourceDefinitionVersion.

        storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.  # noqa: E501

        :param storage: The storage of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def subresources(self): # -> None:
        """Gets the subresources of this V1CustomResourceDefinitionVersion.  # noqa: E501


        :return: The subresources of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :rtype: V1CustomResourceSubresources
        """
        ...
    
    @subresources.setter
    def subresources(self, subresources): # -> None:
        """Sets the subresources of this V1CustomResourceDefinitionVersion.


        :param subresources: The subresources of this V1CustomResourceDefinitionVersion.  # noqa: E501
        :type: V1CustomResourceSubresources
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


