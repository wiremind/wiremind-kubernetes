"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1PortStatus:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, error=..., port=..., protocol=..., local_vars_configuration=...) -> None:
        """V1PortStatus - a model defined in OpenAPI"""
        ...
    
    @property
    def error(self): # -> None:
        """Gets the error of this V1PortStatus.  # noqa: E501

        Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use   CamelCase names - cloud provider specific error values must have names that comply with the   format foo.example.com/CamelCase.  # noqa: E501

        :return: The error of this V1PortStatus.  # noqa: E501
        :rtype: str
        """
        ...
    
    @error.setter
    def error(self, error): # -> None:
        """Sets the error of this V1PortStatus.

        Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use   CamelCase names - cloud provider specific error values must have names that comply with the   format foo.example.com/CamelCase.  # noqa: E501

        :param error: The error of this V1PortStatus.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def port(self): # -> None:
        """Gets the port of this V1PortStatus.  # noqa: E501

        Port is the port number of the service port of which status is recorded here  # noqa: E501

        :return: The port of this V1PortStatus.  # noqa: E501
        :rtype: int
        """
        ...
    
    @port.setter
    def port(self, port): # -> None:
        """Sets the port of this V1PortStatus.

        Port is the port number of the service port of which status is recorded here  # noqa: E501

        :param port: The port of this V1PortStatus.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def protocol(self): # -> None:
        """Gets the protocol of this V1PortStatus.  # noqa: E501

        Protocol is the protocol of the service port of which status is recorded here The supported values are: \"TCP\", \"UDP\", \"SCTP\"    # noqa: E501

        :return: The protocol of this V1PortStatus.  # noqa: E501
        :rtype: str
        """
        ...
    
    @protocol.setter
    def protocol(self, protocol): # -> None:
        """Sets the protocol of this V1PortStatus.

        Protocol is the protocol of the service port of which status is recorded here The supported values are: \"TCP\", \"UDP\", \"SCTP\"    # noqa: E501

        :param protocol: The protocol of this V1PortStatus.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


