"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1PodDNSConfig:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, nameservers=..., options=..., searches=..., local_vars_configuration=...) -> None:
        """V1PodDNSConfig - a model defined in OpenAPI"""
        ...
    
    @property
    def nameservers(self): # -> None:
        """Gets the nameservers of this V1PodDNSConfig.  # noqa: E501

        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.  # noqa: E501

        :return: The nameservers of this V1PodDNSConfig.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @nameservers.setter
    def nameservers(self, nameservers): # -> None:
        """Sets the nameservers of this V1PodDNSConfig.

        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.  # noqa: E501

        :param nameservers: The nameservers of this V1PodDNSConfig.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def options(self): # -> None:
        """Gets the options of this V1PodDNSConfig.  # noqa: E501

        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.  # noqa: E501

        :return: The options of this V1PodDNSConfig.  # noqa: E501
        :rtype: list[V1PodDNSConfigOption]
        """
        ...
    
    @options.setter
    def options(self, options): # -> None:
        """Sets the options of this V1PodDNSConfig.

        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.  # noqa: E501

        :param options: The options of this V1PodDNSConfig.  # noqa: E501
        :type: list[V1PodDNSConfigOption]
        """
        ...
    
    @property
    def searches(self): # -> None:
        """Gets the searches of this V1PodDNSConfig.  # noqa: E501

        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.  # noqa: E501

        :return: The searches of this V1PodDNSConfig.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @searches.setter
    def searches(self, searches): # -> None:
        """Sets the searches of this V1PodDNSConfig.

        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.  # noqa: E501

        :param searches: The searches of this V1PodDNSConfig.  # noqa: E501
        :type: list[str]
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


