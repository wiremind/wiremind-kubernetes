"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1GCEPersistentDiskVolumeSource:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, fs_type=..., partition=..., pd_name=..., read_only=..., local_vars_configuration=...) -> None:
        """V1GCEPersistentDiskVolumeSource - a model defined in OpenAPI"""
        ...
    
    @property
    def fs_type(self): # -> None:
        """Gets the fs_type of this V1GCEPersistentDiskVolumeSource.  # noqa: E501

        fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk  # noqa: E501

        :return: The fs_type of this V1GCEPersistentDiskVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @fs_type.setter
    def fs_type(self, fs_type): # -> None:
        """Sets the fs_type of this V1GCEPersistentDiskVolumeSource.

        fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk  # noqa: E501

        :param fs_type: The fs_type of this V1GCEPersistentDiskVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def partition(self): # -> None:
        """Gets the partition of this V1GCEPersistentDiskVolumeSource.  # noqa: E501

        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk  # noqa: E501

        :return: The partition of this V1GCEPersistentDiskVolumeSource.  # noqa: E501
        :rtype: int
        """
        ...
    
    @partition.setter
    def partition(self, partition): # -> None:
        """Sets the partition of this V1GCEPersistentDiskVolumeSource.

        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk  # noqa: E501

        :param partition: The partition of this V1GCEPersistentDiskVolumeSource.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def pd_name(self): # -> None:
        """Gets the pd_name of this V1GCEPersistentDiskVolumeSource.  # noqa: E501

        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk  # noqa: E501

        :return: The pd_name of this V1GCEPersistentDiskVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @pd_name.setter
    def pd_name(self, pd_name): # -> None:
        """Sets the pd_name of this V1GCEPersistentDiskVolumeSource.

        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk  # noqa: E501

        :param pd_name: The pd_name of this V1GCEPersistentDiskVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def read_only(self): # -> None:
        """Gets the read_only of this V1GCEPersistentDiskVolumeSource.  # noqa: E501

        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk  # noqa: E501

        :return: The read_only of this V1GCEPersistentDiskVolumeSource.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @read_only.setter
    def read_only(self, read_only): # -> None:
        """Sets the read_only of this V1GCEPersistentDiskVolumeSource.

        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk  # noqa: E501

        :param read_only: The read_only of this V1GCEPersistentDiskVolumeSource.  # noqa: E501
        :type: bool
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


