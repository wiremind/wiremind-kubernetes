"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1beta1NonResourcePolicyRule:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, non_resource_ur_ls=..., verbs=..., local_vars_configuration=...) -> None:
        """V1beta1NonResourcePolicyRule - a model defined in OpenAPI"""
        ...
    
    @property
    def non_resource_ur_ls(self): # -> None:
        """Gets the non_resource_ur_ls of this V1beta1NonResourcePolicyRule.  # noqa: E501

        `nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:   - \"/healthz\" is legal   - \"/hea*\" is illegal   - \"/hea\" is legal but matches nothing   - \"/hea/*\" also matches nothing   - \"/healthz/*\" matches all per-component health checks. \"*\" matches all non-resource urls. if it is present, it must be the only entry. Required.  # noqa: E501

        :return: The non_resource_ur_ls of this V1beta1NonResourcePolicyRule.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @non_resource_ur_ls.setter
    def non_resource_ur_ls(self, non_resource_ur_ls): # -> None:
        """Sets the non_resource_ur_ls of this V1beta1NonResourcePolicyRule.

        `nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:   - \"/healthz\" is legal   - \"/hea*\" is illegal   - \"/hea\" is legal but matches nothing   - \"/hea/*\" also matches nothing   - \"/healthz/*\" matches all per-component health checks. \"*\" matches all non-resource urls. if it is present, it must be the only entry. Required.  # noqa: E501

        :param non_resource_ur_ls: The non_resource_ur_ls of this V1beta1NonResourcePolicyRule.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def verbs(self): # -> None:
        """Gets the verbs of this V1beta1NonResourcePolicyRule.  # noqa: E501

        `verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs. If it is present, it must be the only entry. Required.  # noqa: E501

        :return: The verbs of this V1beta1NonResourcePolicyRule.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @verbs.setter
    def verbs(self, verbs): # -> None:
        """Sets the verbs of this V1beta1NonResourcePolicyRule.

        `verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs. If it is present, it must be the only entry. Required.  # noqa: E501

        :param verbs: The verbs of this V1beta1NonResourcePolicyRule.  # noqa: E501
        :type: list[str]
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


