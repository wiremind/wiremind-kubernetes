"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class VersionInfo:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, build_date=..., compiler=..., git_commit=..., git_tree_state=..., git_version=..., go_version=..., major=..., minor=..., platform=..., local_vars_configuration=...) -> None:
        """VersionInfo - a model defined in OpenAPI"""
        ...
    
    @property
    def build_date(self): # -> None:
        """Gets the build_date of this VersionInfo.  # noqa: E501


        :return: The build_date of this VersionInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @build_date.setter
    def build_date(self, build_date): # -> None:
        """Sets the build_date of this VersionInfo.


        :param build_date: The build_date of this VersionInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def compiler(self): # -> None:
        """Gets the compiler of this VersionInfo.  # noqa: E501


        :return: The compiler of this VersionInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @compiler.setter
    def compiler(self, compiler): # -> None:
        """Sets the compiler of this VersionInfo.


        :param compiler: The compiler of this VersionInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def git_commit(self): # -> None:
        """Gets the git_commit of this VersionInfo.  # noqa: E501


        :return: The git_commit of this VersionInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @git_commit.setter
    def git_commit(self, git_commit): # -> None:
        """Sets the git_commit of this VersionInfo.


        :param git_commit: The git_commit of this VersionInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def git_tree_state(self): # -> None:
        """Gets the git_tree_state of this VersionInfo.  # noqa: E501


        :return: The git_tree_state of this VersionInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @git_tree_state.setter
    def git_tree_state(self, git_tree_state): # -> None:
        """Sets the git_tree_state of this VersionInfo.


        :param git_tree_state: The git_tree_state of this VersionInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def git_version(self): # -> None:
        """Gets the git_version of this VersionInfo.  # noqa: E501


        :return: The git_version of this VersionInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @git_version.setter
    def git_version(self, git_version): # -> None:
        """Sets the git_version of this VersionInfo.


        :param git_version: The git_version of this VersionInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def go_version(self): # -> None:
        """Gets the go_version of this VersionInfo.  # noqa: E501


        :return: The go_version of this VersionInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @go_version.setter
    def go_version(self, go_version): # -> None:
        """Sets the go_version of this VersionInfo.


        :param go_version: The go_version of this VersionInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def major(self): # -> None:
        """Gets the major of this VersionInfo.  # noqa: E501


        :return: The major of this VersionInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @major.setter
    def major(self, major): # -> None:
        """Sets the major of this VersionInfo.


        :param major: The major of this VersionInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def minor(self): # -> None:
        """Gets the minor of this VersionInfo.  # noqa: E501


        :return: The minor of this VersionInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @minor.setter
    def minor(self, minor): # -> None:
        """Sets the minor of this VersionInfo.


        :param minor: The minor of this VersionInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def platform(self): # -> None:
        """Gets the platform of this VersionInfo.  # noqa: E501


        :return: The platform of this VersionInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @platform.setter
    def platform(self, platform): # -> None:
        """Sets the platform of this VersionInfo.


        :param platform: The platform of this VersionInfo.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


