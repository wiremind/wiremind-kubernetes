"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1StatusCause:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, field=..., message=..., reason=..., local_vars_configuration=...) -> None:
        """V1StatusCause - a model defined in OpenAPI"""
        ...
    
    @property
    def field(self): # -> None:
        """Gets the field of this V1StatusCause.  # noqa: E501

        The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.  Examples:   \"name\" - the field \"name\" on the current resource   \"items[0].name\" - the field \"name\" on the first array entry in \"items\"  # noqa: E501

        :return: The field of this V1StatusCause.  # noqa: E501
        :rtype: str
        """
        ...
    
    @field.setter
    def field(self, field): # -> None:
        """Sets the field of this V1StatusCause.

        The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.  Examples:   \"name\" - the field \"name\" on the current resource   \"items[0].name\" - the field \"name\" on the first array entry in \"items\"  # noqa: E501

        :param field: The field of this V1StatusCause.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def message(self): # -> None:
        """Gets the message of this V1StatusCause.  # noqa: E501

        A human-readable description of the cause of the error.  This field may be presented as-is to a reader.  # noqa: E501

        :return: The message of this V1StatusCause.  # noqa: E501
        :rtype: str
        """
        ...
    
    @message.setter
    def message(self, message): # -> None:
        """Sets the message of this V1StatusCause.

        A human-readable description of the cause of the error.  This field may be presented as-is to a reader.  # noqa: E501

        :param message: The message of this V1StatusCause.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def reason(self): # -> None:
        """Gets the reason of this V1StatusCause.  # noqa: E501

        A machine-readable description of the cause of the error. If this value is empty there is no information available.  # noqa: E501

        :return: The reason of this V1StatusCause.  # noqa: E501
        :rtype: str
        """
        ...
    
    @reason.setter
    def reason(self, reason): # -> None:
        """Sets the reason of this V1StatusCause.

        A machine-readable description of the cause of the error. If this value is empty there is no information available.  # noqa: E501

        :param reason: The reason of this V1StatusCause.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


