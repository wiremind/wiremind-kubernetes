"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1ContainerPort:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, container_port=..., host_ip=..., host_port=..., name=..., protocol=..., local_vars_configuration=...) -> None:
        """V1ContainerPort - a model defined in OpenAPI"""
        ...
    
    @property
    def container_port(self): # -> None:
        """Gets the container_port of this V1ContainerPort.  # noqa: E501

        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.  # noqa: E501

        :return: The container_port of this V1ContainerPort.  # noqa: E501
        :rtype: int
        """
        ...
    
    @container_port.setter
    def container_port(self, container_port): # -> None:
        """Sets the container_port of this V1ContainerPort.

        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.  # noqa: E501

        :param container_port: The container_port of this V1ContainerPort.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def host_ip(self): # -> None:
        """Gets the host_ip of this V1ContainerPort.  # noqa: E501

        What host IP to bind the external port to.  # noqa: E501

        :return: The host_ip of this V1ContainerPort.  # noqa: E501
        :rtype: str
        """
        ...
    
    @host_ip.setter
    def host_ip(self, host_ip): # -> None:
        """Sets the host_ip of this V1ContainerPort.

        What host IP to bind the external port to.  # noqa: E501

        :param host_ip: The host_ip of this V1ContainerPort.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def host_port(self): # -> None:
        """Gets the host_port of this V1ContainerPort.  # noqa: E501

        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.  # noqa: E501

        :return: The host_port of this V1ContainerPort.  # noqa: E501
        :rtype: int
        """
        ...
    
    @host_port.setter
    def host_port(self, host_port): # -> None:
        """Sets the host_port of this V1ContainerPort.

        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.  # noqa: E501

        :param host_port: The host_port of this V1ContainerPort.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def name(self): # -> None:
        """Gets the name of this V1ContainerPort.  # noqa: E501

        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.  # noqa: E501

        :return: The name of this V1ContainerPort.  # noqa: E501
        :rtype: str
        """
        ...
    
    @name.setter
    def name(self, name): # -> None:
        """Sets the name of this V1ContainerPort.

        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.  # noqa: E501

        :param name: The name of this V1ContainerPort.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def protocol(self): # -> None:
        """Gets the protocol of this V1ContainerPort.  # noqa: E501

        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".    # noqa: E501

        :return: The protocol of this V1ContainerPort.  # noqa: E501
        :rtype: str
        """
        ...
    
    @protocol.setter
    def protocol(self, protocol): # -> None:
        """Sets the protocol of this V1ContainerPort.

        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".    # noqa: E501

        :param protocol: The protocol of this V1ContainerPort.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


