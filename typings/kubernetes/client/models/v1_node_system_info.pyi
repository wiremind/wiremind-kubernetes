"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1NodeSystemInfo:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, architecture=..., boot_id=..., container_runtime_version=..., kernel_version=..., kube_proxy_version=..., kubelet_version=..., machine_id=..., operating_system=..., os_image=..., system_uuid=..., local_vars_configuration=...) -> None:
        """V1NodeSystemInfo - a model defined in OpenAPI"""
        ...
    
    @property
    def architecture(self): # -> None:
        """Gets the architecture of this V1NodeSystemInfo.  # noqa: E501

        The Architecture reported by the node  # noqa: E501

        :return: The architecture of this V1NodeSystemInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @architecture.setter
    def architecture(self, architecture): # -> None:
        """Sets the architecture of this V1NodeSystemInfo.

        The Architecture reported by the node  # noqa: E501

        :param architecture: The architecture of this V1NodeSystemInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def boot_id(self): # -> None:
        """Gets the boot_id of this V1NodeSystemInfo.  # noqa: E501

        Boot ID reported by the node.  # noqa: E501

        :return: The boot_id of this V1NodeSystemInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @boot_id.setter
    def boot_id(self, boot_id): # -> None:
        """Sets the boot_id of this V1NodeSystemInfo.

        Boot ID reported by the node.  # noqa: E501

        :param boot_id: The boot_id of this V1NodeSystemInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def container_runtime_version(self): # -> None:
        """Gets the container_runtime_version of this V1NodeSystemInfo.  # noqa: E501

        ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).  # noqa: E501

        :return: The container_runtime_version of this V1NodeSystemInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @container_runtime_version.setter
    def container_runtime_version(self, container_runtime_version): # -> None:
        """Sets the container_runtime_version of this V1NodeSystemInfo.

        ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).  # noqa: E501

        :param container_runtime_version: The container_runtime_version of this V1NodeSystemInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def kernel_version(self): # -> None:
        """Gets the kernel_version of this V1NodeSystemInfo.  # noqa: E501

        Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).  # noqa: E501

        :return: The kernel_version of this V1NodeSystemInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @kernel_version.setter
    def kernel_version(self, kernel_version): # -> None:
        """Sets the kernel_version of this V1NodeSystemInfo.

        Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).  # noqa: E501

        :param kernel_version: The kernel_version of this V1NodeSystemInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def kube_proxy_version(self): # -> None:
        """Gets the kube_proxy_version of this V1NodeSystemInfo.  # noqa: E501

        KubeProxy Version reported by the node.  # noqa: E501

        :return: The kube_proxy_version of this V1NodeSystemInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @kube_proxy_version.setter
    def kube_proxy_version(self, kube_proxy_version): # -> None:
        """Sets the kube_proxy_version of this V1NodeSystemInfo.

        KubeProxy Version reported by the node.  # noqa: E501

        :param kube_proxy_version: The kube_proxy_version of this V1NodeSystemInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def kubelet_version(self): # -> None:
        """Gets the kubelet_version of this V1NodeSystemInfo.  # noqa: E501

        Kubelet Version reported by the node.  # noqa: E501

        :return: The kubelet_version of this V1NodeSystemInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @kubelet_version.setter
    def kubelet_version(self, kubelet_version): # -> None:
        """Sets the kubelet_version of this V1NodeSystemInfo.

        Kubelet Version reported by the node.  # noqa: E501

        :param kubelet_version: The kubelet_version of this V1NodeSystemInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def machine_id(self): # -> None:
        """Gets the machine_id of this V1NodeSystemInfo.  # noqa: E501

        MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html  # noqa: E501

        :return: The machine_id of this V1NodeSystemInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @machine_id.setter
    def machine_id(self, machine_id): # -> None:
        """Sets the machine_id of this V1NodeSystemInfo.

        MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html  # noqa: E501

        :param machine_id: The machine_id of this V1NodeSystemInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def operating_system(self): # -> None:
        """Gets the operating_system of this V1NodeSystemInfo.  # noqa: E501

        The Operating System reported by the node  # noqa: E501

        :return: The operating_system of this V1NodeSystemInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @operating_system.setter
    def operating_system(self, operating_system): # -> None:
        """Sets the operating_system of this V1NodeSystemInfo.

        The Operating System reported by the node  # noqa: E501

        :param operating_system: The operating_system of this V1NodeSystemInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def os_image(self): # -> None:
        """Gets the os_image of this V1NodeSystemInfo.  # noqa: E501

        OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).  # noqa: E501

        :return: The os_image of this V1NodeSystemInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @os_image.setter
    def os_image(self, os_image): # -> None:
        """Sets the os_image of this V1NodeSystemInfo.

        OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).  # noqa: E501

        :param os_image: The os_image of this V1NodeSystemInfo.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def system_uuid(self): # -> None:
        """Gets the system_uuid of this V1NodeSystemInfo.  # noqa: E501

        SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid  # noqa: E501

        :return: The system_uuid of this V1NodeSystemInfo.  # noqa: E501
        :rtype: str
        """
        ...
    
    @system_uuid.setter
    def system_uuid(self, system_uuid): # -> None:
        """Sets the system_uuid of this V1NodeSystemInfo.

        SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid  # noqa: E501

        :param system_uuid: The system_uuid of this V1NodeSystemInfo.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


