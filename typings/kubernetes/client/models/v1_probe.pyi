"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1Probe:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, _exec=..., failure_threshold=..., grpc=..., http_get=..., initial_delay_seconds=..., period_seconds=..., success_threshold=..., tcp_socket=..., termination_grace_period_seconds=..., timeout_seconds=..., local_vars_configuration=...) -> None:
        """V1Probe - a model defined in OpenAPI"""
        ...
    
    @property
    def failure_threshold(self): # -> None:
        """Gets the failure_threshold of this V1Probe.  # noqa: E501

        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.  # noqa: E501

        :return: The failure_threshold of this V1Probe.  # noqa: E501
        :rtype: int
        """
        ...
    
    @failure_threshold.setter
    def failure_threshold(self, failure_threshold): # -> None:
        """Sets the failure_threshold of this V1Probe.

        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.  # noqa: E501

        :param failure_threshold: The failure_threshold of this V1Probe.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def grpc(self): # -> None:
        """Gets the grpc of this V1Probe.  # noqa: E501


        :return: The grpc of this V1Probe.  # noqa: E501
        :rtype: V1GRPCAction
        """
        ...
    
    @grpc.setter
    def grpc(self, grpc): # -> None:
        """Sets the grpc of this V1Probe.


        :param grpc: The grpc of this V1Probe.  # noqa: E501
        :type: V1GRPCAction
        """
        ...
    
    @property
    def http_get(self): # -> None:
        """Gets the http_get of this V1Probe.  # noqa: E501


        :return: The http_get of this V1Probe.  # noqa: E501
        :rtype: V1HTTPGetAction
        """
        ...
    
    @http_get.setter
    def http_get(self, http_get): # -> None:
        """Sets the http_get of this V1Probe.


        :param http_get: The http_get of this V1Probe.  # noqa: E501
        :type: V1HTTPGetAction
        """
        ...
    
    @property
    def initial_delay_seconds(self): # -> None:
        """Gets the initial_delay_seconds of this V1Probe.  # noqa: E501

        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes  # noqa: E501

        :return: The initial_delay_seconds of this V1Probe.  # noqa: E501
        :rtype: int
        """
        ...
    
    @initial_delay_seconds.setter
    def initial_delay_seconds(self, initial_delay_seconds): # -> None:
        """Sets the initial_delay_seconds of this V1Probe.

        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes  # noqa: E501

        :param initial_delay_seconds: The initial_delay_seconds of this V1Probe.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def period_seconds(self): # -> None:
        """Gets the period_seconds of this V1Probe.  # noqa: E501

        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.  # noqa: E501

        :return: The period_seconds of this V1Probe.  # noqa: E501
        :rtype: int
        """
        ...
    
    @period_seconds.setter
    def period_seconds(self, period_seconds): # -> None:
        """Sets the period_seconds of this V1Probe.

        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.  # noqa: E501

        :param period_seconds: The period_seconds of this V1Probe.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def success_threshold(self): # -> None:
        """Gets the success_threshold of this V1Probe.  # noqa: E501

        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.  # noqa: E501

        :return: The success_threshold of this V1Probe.  # noqa: E501
        :rtype: int
        """
        ...
    
    @success_threshold.setter
    def success_threshold(self, success_threshold): # -> None:
        """Sets the success_threshold of this V1Probe.

        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.  # noqa: E501

        :param success_threshold: The success_threshold of this V1Probe.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def tcp_socket(self): # -> None:
        """Gets the tcp_socket of this V1Probe.  # noqa: E501


        :return: The tcp_socket of this V1Probe.  # noqa: E501
        :rtype: V1TCPSocketAction
        """
        ...
    
    @tcp_socket.setter
    def tcp_socket(self, tcp_socket): # -> None:
        """Sets the tcp_socket of this V1Probe.


        :param tcp_socket: The tcp_socket of this V1Probe.  # noqa: E501
        :type: V1TCPSocketAction
        """
        ...
    
    @property
    def termination_grace_period_seconds(self): # -> None:
        """Gets the termination_grace_period_seconds of this V1Probe.  # noqa: E501

        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.  # noqa: E501

        :return: The termination_grace_period_seconds of this V1Probe.  # noqa: E501
        :rtype: int
        """
        ...
    
    @termination_grace_period_seconds.setter
    def termination_grace_period_seconds(self, termination_grace_period_seconds): # -> None:
        """Sets the termination_grace_period_seconds of this V1Probe.

        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.  # noqa: E501

        :param termination_grace_period_seconds: The termination_grace_period_seconds of this V1Probe.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def timeout_seconds(self): # -> None:
        """Gets the timeout_seconds of this V1Probe.  # noqa: E501

        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes  # noqa: E501

        :return: The timeout_seconds of this V1Probe.  # noqa: E501
        :rtype: int
        """
        ...
    
    @timeout_seconds.setter
    def timeout_seconds(self, timeout_seconds): # -> None:
        """Sets the timeout_seconds of this V1Probe.

        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes  # noqa: E501

        :param timeout_seconds: The timeout_seconds of this V1Probe.  # noqa: E501
        :type: int
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


