"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1NetworkPolicyEgressRule:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, ports=..., to=..., local_vars_configuration=...) -> None:
        """V1NetworkPolicyEgressRule - a model defined in OpenAPI"""
        ...
    
    @property
    def ports(self): # -> None:
        """Gets the ports of this V1NetworkPolicyEgressRule.  # noqa: E501

        List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.  # noqa: E501

        :return: The ports of this V1NetworkPolicyEgressRule.  # noqa: E501
        :rtype: list[V1NetworkPolicyPort]
        """
        ...
    
    @ports.setter
    def ports(self, ports): # -> None:
        """Sets the ports of this V1NetworkPolicyEgressRule.

        List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.  # noqa: E501

        :param ports: The ports of this V1NetworkPolicyEgressRule.  # noqa: E501
        :type: list[V1NetworkPolicyPort]
        """
        ...
    
    @property
    def to(self): # -> None:
        """Gets the to of this V1NetworkPolicyEgressRule.  # noqa: E501

        List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.  # noqa: E501

        :return: The to of this V1NetworkPolicyEgressRule.  # noqa: E501
        :rtype: list[V1NetworkPolicyPeer]
        """
        ...
    
    @to.setter
    def to(self, to): # -> None:
        """Sets the to of this V1NetworkPolicyEgressRule.

        List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.  # noqa: E501

        :param to: The to of this V1NetworkPolicyEgressRule.  # noqa: E501
        :type: list[V1NetworkPolicyPeer]
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


