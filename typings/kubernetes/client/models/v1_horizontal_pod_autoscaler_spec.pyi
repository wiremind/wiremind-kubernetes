"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1HorizontalPodAutoscalerSpec:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, max_replicas=..., min_replicas=..., scale_target_ref=..., target_cpu_utilization_percentage=..., local_vars_configuration=...) -> None:
        """V1HorizontalPodAutoscalerSpec - a model defined in OpenAPI"""
        ...
    
    @property
    def max_replicas(self): # -> None:
        """Gets the max_replicas of this V1HorizontalPodAutoscalerSpec.  # noqa: E501

        upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.  # noqa: E501

        :return: The max_replicas of this V1HorizontalPodAutoscalerSpec.  # noqa: E501
        :rtype: int
        """
        ...
    
    @max_replicas.setter
    def max_replicas(self, max_replicas): # -> None:
        """Sets the max_replicas of this V1HorizontalPodAutoscalerSpec.

        upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.  # noqa: E501

        :param max_replicas: The max_replicas of this V1HorizontalPodAutoscalerSpec.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def min_replicas(self): # -> None:
        """Gets the min_replicas of this V1HorizontalPodAutoscalerSpec.  # noqa: E501

        minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.  # noqa: E501

        :return: The min_replicas of this V1HorizontalPodAutoscalerSpec.  # noqa: E501
        :rtype: int
        """
        ...
    
    @min_replicas.setter
    def min_replicas(self, min_replicas): # -> None:
        """Sets the min_replicas of this V1HorizontalPodAutoscalerSpec.

        minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.  # noqa: E501

        :param min_replicas: The min_replicas of this V1HorizontalPodAutoscalerSpec.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def scale_target_ref(self): # -> None:
        """Gets the scale_target_ref of this V1HorizontalPodAutoscalerSpec.  # noqa: E501


        :return: The scale_target_ref of this V1HorizontalPodAutoscalerSpec.  # noqa: E501
        :rtype: V1CrossVersionObjectReference
        """
        ...
    
    @scale_target_ref.setter
    def scale_target_ref(self, scale_target_ref): # -> None:
        """Sets the scale_target_ref of this V1HorizontalPodAutoscalerSpec.


        :param scale_target_ref: The scale_target_ref of this V1HorizontalPodAutoscalerSpec.  # noqa: E501
        :type: V1CrossVersionObjectReference
        """
        ...
    
    @property
    def target_cpu_utilization_percentage(self): # -> None:
        """Gets the target_cpu_utilization_percentage of this V1HorizontalPodAutoscalerSpec.  # noqa: E501

        target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.  # noqa: E501

        :return: The target_cpu_utilization_percentage of this V1HorizontalPodAutoscalerSpec.  # noqa: E501
        :rtype: int
        """
        ...
    
    @target_cpu_utilization_percentage.setter
    def target_cpu_utilization_percentage(self, target_cpu_utilization_percentage): # -> None:
        """Sets the target_cpu_utilization_percentage of this V1HorizontalPodAutoscalerSpec.

        target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.  # noqa: E501

        :param target_cpu_utilization_percentage: The target_cpu_utilization_percentage of this V1HorizontalPodAutoscalerSpec.  # noqa: E501
        :type: int
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


