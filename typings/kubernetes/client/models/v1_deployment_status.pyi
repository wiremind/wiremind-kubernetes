"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1DeploymentStatus:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, available_replicas=..., collision_count=..., conditions=..., observed_generation=..., ready_replicas=..., replicas=..., unavailable_replicas=..., updated_replicas=..., local_vars_configuration=...) -> None:
        """V1DeploymentStatus - a model defined in OpenAPI"""
        ...
    
    @property
    def available_replicas(self): # -> None:
        """Gets the available_replicas of this V1DeploymentStatus.  # noqa: E501

        Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.  # noqa: E501

        :return: The available_replicas of this V1DeploymentStatus.  # noqa: E501
        :rtype: int
        """
        ...
    
    @available_replicas.setter
    def available_replicas(self, available_replicas): # -> None:
        """Sets the available_replicas of this V1DeploymentStatus.

        Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.  # noqa: E501

        :param available_replicas: The available_replicas of this V1DeploymentStatus.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def collision_count(self): # -> None:
        """Gets the collision_count of this V1DeploymentStatus.  # noqa: E501

        Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.  # noqa: E501

        :return: The collision_count of this V1DeploymentStatus.  # noqa: E501
        :rtype: int
        """
        ...
    
    @collision_count.setter
    def collision_count(self, collision_count): # -> None:
        """Sets the collision_count of this V1DeploymentStatus.

        Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.  # noqa: E501

        :param collision_count: The collision_count of this V1DeploymentStatus.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def conditions(self): # -> None:
        """Gets the conditions of this V1DeploymentStatus.  # noqa: E501

        Represents the latest available observations of a deployment's current state.  # noqa: E501

        :return: The conditions of this V1DeploymentStatus.  # noqa: E501
        :rtype: list[V1DeploymentCondition]
        """
        ...
    
    @conditions.setter
    def conditions(self, conditions): # -> None:
        """Sets the conditions of this V1DeploymentStatus.

        Represents the latest available observations of a deployment's current state.  # noqa: E501

        :param conditions: The conditions of this V1DeploymentStatus.  # noqa: E501
        :type: list[V1DeploymentCondition]
        """
        ...
    
    @property
    def observed_generation(self): # -> None:
        """Gets the observed_generation of this V1DeploymentStatus.  # noqa: E501

        The generation observed by the deployment controller.  # noqa: E501

        :return: The observed_generation of this V1DeploymentStatus.  # noqa: E501
        :rtype: int
        """
        ...
    
    @observed_generation.setter
    def observed_generation(self, observed_generation): # -> None:
        """Sets the observed_generation of this V1DeploymentStatus.

        The generation observed by the deployment controller.  # noqa: E501

        :param observed_generation: The observed_generation of this V1DeploymentStatus.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def ready_replicas(self): # -> None:
        """Gets the ready_replicas of this V1DeploymentStatus.  # noqa: E501

        readyReplicas is the number of pods targeted by this Deployment with a Ready Condition.  # noqa: E501

        :return: The ready_replicas of this V1DeploymentStatus.  # noqa: E501
        :rtype: int
        """
        ...
    
    @ready_replicas.setter
    def ready_replicas(self, ready_replicas): # -> None:
        """Sets the ready_replicas of this V1DeploymentStatus.

        readyReplicas is the number of pods targeted by this Deployment with a Ready Condition.  # noqa: E501

        :param ready_replicas: The ready_replicas of this V1DeploymentStatus.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def replicas(self): # -> None:
        """Gets the replicas of this V1DeploymentStatus.  # noqa: E501

        Total number of non-terminated pods targeted by this deployment (their labels match the selector).  # noqa: E501

        :return: The replicas of this V1DeploymentStatus.  # noqa: E501
        :rtype: int
        """
        ...
    
    @replicas.setter
    def replicas(self, replicas): # -> None:
        """Sets the replicas of this V1DeploymentStatus.

        Total number of non-terminated pods targeted by this deployment (their labels match the selector).  # noqa: E501

        :param replicas: The replicas of this V1DeploymentStatus.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def unavailable_replicas(self): # -> None:
        """Gets the unavailable_replicas of this V1DeploymentStatus.  # noqa: E501

        Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.  # noqa: E501

        :return: The unavailable_replicas of this V1DeploymentStatus.  # noqa: E501
        :rtype: int
        """
        ...
    
    @unavailable_replicas.setter
    def unavailable_replicas(self, unavailable_replicas): # -> None:
        """Sets the unavailable_replicas of this V1DeploymentStatus.

        Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.  # noqa: E501

        :param unavailable_replicas: The unavailable_replicas of this V1DeploymentStatus.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def updated_replicas(self): # -> None:
        """Gets the updated_replicas of this V1DeploymentStatus.  # noqa: E501

        Total number of non-terminated pods targeted by this deployment that have the desired template spec.  # noqa: E501

        :return: The updated_replicas of this V1DeploymentStatus.  # noqa: E501
        :rtype: int
        """
        ...
    
    @updated_replicas.setter
    def updated_replicas(self, updated_replicas): # -> None:
        """Sets the updated_replicas of this V1DeploymentStatus.

        Total number of non-terminated pods targeted by this deployment that have the desired template spec.  # noqa: E501

        :param updated_replicas: The updated_replicas of this V1DeploymentStatus.  # noqa: E501
        :type: int
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


