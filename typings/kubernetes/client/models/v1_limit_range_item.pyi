"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1LimitRangeItem:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, default=..., default_request=..., max=..., max_limit_request_ratio=..., min=..., type=..., local_vars_configuration=...) -> None:
        """V1LimitRangeItem - a model defined in OpenAPI"""
        ...
    
    @property
    def default(self): # -> None:
        """Gets the default of this V1LimitRangeItem.  # noqa: E501

        Default resource requirement limit value by resource name if resource limit is omitted.  # noqa: E501

        :return: The default of this V1LimitRangeItem.  # noqa: E501
        :rtype: dict(str, str)
        """
        ...
    
    @default.setter
    def default(self, default): # -> None:
        """Sets the default of this V1LimitRangeItem.

        Default resource requirement limit value by resource name if resource limit is omitted.  # noqa: E501

        :param default: The default of this V1LimitRangeItem.  # noqa: E501
        :type: dict(str, str)
        """
        ...
    
    @property
    def default_request(self): # -> None:
        """Gets the default_request of this V1LimitRangeItem.  # noqa: E501

        DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.  # noqa: E501

        :return: The default_request of this V1LimitRangeItem.  # noqa: E501
        :rtype: dict(str, str)
        """
        ...
    
    @default_request.setter
    def default_request(self, default_request): # -> None:
        """Sets the default_request of this V1LimitRangeItem.

        DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.  # noqa: E501

        :param default_request: The default_request of this V1LimitRangeItem.  # noqa: E501
        :type: dict(str, str)
        """
        ...
    
    @property
    def max(self): # -> None:
        """Gets the max of this V1LimitRangeItem.  # noqa: E501

        Max usage constraints on this kind by resource name.  # noqa: E501

        :return: The max of this V1LimitRangeItem.  # noqa: E501
        :rtype: dict(str, str)
        """
        ...
    
    @max.setter
    def max(self, max): # -> None:
        """Sets the max of this V1LimitRangeItem.

        Max usage constraints on this kind by resource name.  # noqa: E501

        :param max: The max of this V1LimitRangeItem.  # noqa: E501
        :type: dict(str, str)
        """
        ...
    
    @property
    def max_limit_request_ratio(self): # -> None:
        """Gets the max_limit_request_ratio of this V1LimitRangeItem.  # noqa: E501

        MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.  # noqa: E501

        :return: The max_limit_request_ratio of this V1LimitRangeItem.  # noqa: E501
        :rtype: dict(str, str)
        """
        ...
    
    @max_limit_request_ratio.setter
    def max_limit_request_ratio(self, max_limit_request_ratio): # -> None:
        """Sets the max_limit_request_ratio of this V1LimitRangeItem.

        MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.  # noqa: E501

        :param max_limit_request_ratio: The max_limit_request_ratio of this V1LimitRangeItem.  # noqa: E501
        :type: dict(str, str)
        """
        ...
    
    @property
    def min(self): # -> None:
        """Gets the min of this V1LimitRangeItem.  # noqa: E501

        Min usage constraints on this kind by resource name.  # noqa: E501

        :return: The min of this V1LimitRangeItem.  # noqa: E501
        :rtype: dict(str, str)
        """
        ...
    
    @min.setter
    def min(self, min): # -> None:
        """Sets the min of this V1LimitRangeItem.

        Min usage constraints on this kind by resource name.  # noqa: E501

        :param min: The min of this V1LimitRangeItem.  # noqa: E501
        :type: dict(str, str)
        """
        ...
    
    @property
    def type(self): # -> None:
        """Gets the type of this V1LimitRangeItem.  # noqa: E501

        Type of resource that this limit applies to.  # noqa: E501

        :return: The type of this V1LimitRangeItem.  # noqa: E501
        :rtype: str
        """
        ...
    
    @type.setter
    def type(self, type): # -> None:
        """Sets the type of this V1LimitRangeItem.

        Type of resource that this limit applies to.  # noqa: E501

        :param type: The type of this V1LimitRangeItem.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


