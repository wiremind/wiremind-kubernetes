"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1ContainerImage:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, names=..., size_bytes=..., local_vars_configuration=...) -> None:
        """V1ContainerImage - a model defined in OpenAPI"""
        ...
    
    @property
    def names(self): # -> None:
        """Gets the names of this V1ContainerImage.  # noqa: E501

        Names by which this image is known. e.g. [\"k8s.gcr.io/hyperkube:v1.0.7\", \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]  # noqa: E501

        :return: The names of this V1ContainerImage.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @names.setter
    def names(self, names): # -> None:
        """Sets the names of this V1ContainerImage.

        Names by which this image is known. e.g. [\"k8s.gcr.io/hyperkube:v1.0.7\", \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]  # noqa: E501

        :param names: The names of this V1ContainerImage.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def size_bytes(self): # -> None:
        """Gets the size_bytes of this V1ContainerImage.  # noqa: E501

        The size of the image in bytes.  # noqa: E501

        :return: The size_bytes of this V1ContainerImage.  # noqa: E501
        :rtype: int
        """
        ...
    
    @size_bytes.setter
    def size_bytes(self, size_bytes): # -> None:
        """Sets the size_bytes of this V1ContainerImage.

        The size of the image in bytes.  # noqa: E501

        :param size_bytes: The size_bytes of this V1ContainerImage.  # noqa: E501
        :type: int
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


