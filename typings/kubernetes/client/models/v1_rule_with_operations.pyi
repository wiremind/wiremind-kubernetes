"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1RuleWithOperations:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, api_groups=..., api_versions=..., operations=..., resources=..., scope=..., local_vars_configuration=...) -> None:
        """V1RuleWithOperations - a model defined in OpenAPI"""
        ...
    
    @property
    def api_groups(self): # -> None:
        """Gets the api_groups of this V1RuleWithOperations.  # noqa: E501

        APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.  # noqa: E501

        :return: The api_groups of this V1RuleWithOperations.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @api_groups.setter
    def api_groups(self, api_groups): # -> None:
        """Sets the api_groups of this V1RuleWithOperations.

        APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.  # noqa: E501

        :param api_groups: The api_groups of this V1RuleWithOperations.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def api_versions(self): # -> None:
        """Gets the api_versions of this V1RuleWithOperations.  # noqa: E501

        APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.  # noqa: E501

        :return: The api_versions of this V1RuleWithOperations.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @api_versions.setter
    def api_versions(self, api_versions): # -> None:
        """Sets the api_versions of this V1RuleWithOperations.

        APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.  # noqa: E501

        :param api_versions: The api_versions of this V1RuleWithOperations.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def operations(self): # -> None:
        """Gets the operations of this V1RuleWithOperations.  # noqa: E501

        Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.  # noqa: E501

        :return: The operations of this V1RuleWithOperations.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @operations.setter
    def operations(self, operations): # -> None:
        """Sets the operations of this V1RuleWithOperations.

        Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.  # noqa: E501

        :param operations: The operations of this V1RuleWithOperations.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def resources(self): # -> None:
        """Gets the resources of this V1RuleWithOperations.  # noqa: E501

        Resources is a list of resources this rule applies to.  For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.  If wildcard is present, the validation rule will ensure resources do not overlap with each other.  Depending on the enclosing object, subresources might not be allowed. Required.  # noqa: E501

        :return: The resources of this V1RuleWithOperations.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @resources.setter
    def resources(self, resources): # -> None:
        """Sets the resources of this V1RuleWithOperations.

        Resources is a list of resources this rule applies to.  For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.  If wildcard is present, the validation rule will ensure resources do not overlap with each other.  Depending on the enclosing object, subresources might not be allowed. Required.  # noqa: E501

        :param resources: The resources of this V1RuleWithOperations.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def scope(self): # -> None:
        """Gets the scope of this V1RuleWithOperations.  # noqa: E501

        scope specifies the scope of this rule. Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".  # noqa: E501

        :return: The scope of this V1RuleWithOperations.  # noqa: E501
        :rtype: str
        """
        ...
    
    @scope.setter
    def scope(self, scope): # -> None:
        """Sets the scope of this V1RuleWithOperations.

        scope specifies the scope of this rule. Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".  # noqa: E501

        :param scope: The scope of this V1RuleWithOperations.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


