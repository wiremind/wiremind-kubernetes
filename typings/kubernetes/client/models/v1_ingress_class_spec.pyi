"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1IngressClassSpec:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, controller=..., parameters=..., local_vars_configuration=...) -> None:
        """V1IngressClassSpec - a model defined in OpenAPI"""
        ...
    
    @property
    def controller(self): # -> None:
        """Gets the controller of this V1IngressClassSpec.  # noqa: E501

        Controller refers to the name of the controller that should handle this class. This allows for different \"flavors\" that are controlled by the same controller. For example, you may have different Parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. \"acme.io/ingress-controller\". This field is immutable.  # noqa: E501

        :return: The controller of this V1IngressClassSpec.  # noqa: E501
        :rtype: str
        """
        ...
    
    @controller.setter
    def controller(self, controller): # -> None:
        """Sets the controller of this V1IngressClassSpec.

        Controller refers to the name of the controller that should handle this class. This allows for different \"flavors\" that are controlled by the same controller. For example, you may have different Parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. \"acme.io/ingress-controller\". This field is immutable.  # noqa: E501

        :param controller: The controller of this V1IngressClassSpec.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def parameters(self): # -> None:
        """Gets the parameters of this V1IngressClassSpec.  # noqa: E501


        :return: The parameters of this V1IngressClassSpec.  # noqa: E501
        :rtype: V1IngressClassParametersReference
        """
        ...
    
    @parameters.setter
    def parameters(self, parameters): # -> None:
        """Sets the parameters of this V1IngressClassSpec.


        :param parameters: The parameters of this V1IngressClassSpec.  # noqa: E501
        :type: V1IngressClassParametersReference
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


