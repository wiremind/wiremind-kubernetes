"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class ApiregistrationV1ServiceReference:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, name=..., namespace=..., port=..., local_vars_configuration=...) -> None:
        """ApiregistrationV1ServiceReference - a model defined in OpenAPI"""
        ...
    
    @property
    def name(self): # -> None:
        """Gets the name of this ApiregistrationV1ServiceReference.  # noqa: E501

        Name is the name of the service  # noqa: E501

        :return: The name of this ApiregistrationV1ServiceReference.  # noqa: E501
        :rtype: str
        """
        ...
    
    @name.setter
    def name(self, name): # -> None:
        """Sets the name of this ApiregistrationV1ServiceReference.

        Name is the name of the service  # noqa: E501

        :param name: The name of this ApiregistrationV1ServiceReference.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def namespace(self): # -> None:
        """Gets the namespace of this ApiregistrationV1ServiceReference.  # noqa: E501

        Namespace is the namespace of the service  # noqa: E501

        :return: The namespace of this ApiregistrationV1ServiceReference.  # noqa: E501
        :rtype: str
        """
        ...
    
    @namespace.setter
    def namespace(self, namespace): # -> None:
        """Sets the namespace of this ApiregistrationV1ServiceReference.

        Namespace is the namespace of the service  # noqa: E501

        :param namespace: The namespace of this ApiregistrationV1ServiceReference.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def port(self): # -> None:
        """Gets the port of this ApiregistrationV1ServiceReference.  # noqa: E501

        If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).  # noqa: E501

        :return: The port of this ApiregistrationV1ServiceReference.  # noqa: E501
        :rtype: int
        """
        ...
    
    @port.setter
    def port(self, port): # -> None:
        """Sets the port of this ApiregistrationV1ServiceReference.

        If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).  # noqa: E501

        :param port: The port of this ApiregistrationV1ServiceReference.  # noqa: E501
        :type: int
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


