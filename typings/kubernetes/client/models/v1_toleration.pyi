"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1Toleration:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, effect=..., key=..., operator=..., toleration_seconds=..., value=..., local_vars_configuration=...) -> None:
        """V1Toleration - a model defined in OpenAPI"""
        ...
    
    @property
    def effect(self): # -> None:
        """Gets the effect of this V1Toleration.  # noqa: E501

        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.    # noqa: E501

        :return: The effect of this V1Toleration.  # noqa: E501
        :rtype: str
        """
        ...
    
    @effect.setter
    def effect(self, effect): # -> None:
        """Sets the effect of this V1Toleration.

        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.    # noqa: E501

        :param effect: The effect of this V1Toleration.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def key(self): # -> None:
        """Gets the key of this V1Toleration.  # noqa: E501

        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.  # noqa: E501

        :return: The key of this V1Toleration.  # noqa: E501
        :rtype: str
        """
        ...
    
    @key.setter
    def key(self, key): # -> None:
        """Sets the key of this V1Toleration.

        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.  # noqa: E501

        :param key: The key of this V1Toleration.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def operator(self): # -> None:
        """Gets the operator of this V1Toleration.  # noqa: E501

        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.    # noqa: E501

        :return: The operator of this V1Toleration.  # noqa: E501
        :rtype: str
        """
        ...
    
    @operator.setter
    def operator(self, operator): # -> None:
        """Sets the operator of this V1Toleration.

        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.    # noqa: E501

        :param operator: The operator of this V1Toleration.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def toleration_seconds(self): # -> None:
        """Gets the toleration_seconds of this V1Toleration.  # noqa: E501

        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.  # noqa: E501

        :return: The toleration_seconds of this V1Toleration.  # noqa: E501
        :rtype: int
        """
        ...
    
    @toleration_seconds.setter
    def toleration_seconds(self, toleration_seconds): # -> None:
        """Sets the toleration_seconds of this V1Toleration.

        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.  # noqa: E501

        :param toleration_seconds: The toleration_seconds of this V1Toleration.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def value(self): # -> None:
        """Gets the value of this V1Toleration.  # noqa: E501

        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.  # noqa: E501

        :return: The value of this V1Toleration.  # noqa: E501
        :rtype: str
        """
        ...
    
    @value.setter
    def value(self, value): # -> None:
        """Sets the value of this V1Toleration.

        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.  # noqa: E501

        :param value: The value of this V1Toleration.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


