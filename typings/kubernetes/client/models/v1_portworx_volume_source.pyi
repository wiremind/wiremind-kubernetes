"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1PortworxVolumeSource:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, fs_type=..., read_only=..., volume_id=..., local_vars_configuration=...) -> None:
        """V1PortworxVolumeSource - a model defined in OpenAPI"""
        ...
    
    @property
    def fs_type(self): # -> None:
        """Gets the fs_type of this V1PortworxVolumeSource.  # noqa: E501

        fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.  # noqa: E501

        :return: The fs_type of this V1PortworxVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @fs_type.setter
    def fs_type(self, fs_type): # -> None:
        """Sets the fs_type of this V1PortworxVolumeSource.

        fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.  # noqa: E501

        :param fs_type: The fs_type of this V1PortworxVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def read_only(self): # -> None:
        """Gets the read_only of this V1PortworxVolumeSource.  # noqa: E501

        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  # noqa: E501

        :return: The read_only of this V1PortworxVolumeSource.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @read_only.setter
    def read_only(self, read_only): # -> None:
        """Sets the read_only of this V1PortworxVolumeSource.

        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  # noqa: E501

        :param read_only: The read_only of this V1PortworxVolumeSource.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def volume_id(self): # -> None:
        """Gets the volume_id of this V1PortworxVolumeSource.  # noqa: E501

        volumeID uniquely identifies a Portworx volume  # noqa: E501

        :return: The volume_id of this V1PortworxVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @volume_id.setter
    def volume_id(self, volume_id): # -> None:
        """Sets the volume_id of this V1PortworxVolumeSource.

        volumeID uniquely identifies a Portworx volume  # noqa: E501

        :param volume_id: The volume_id of this V1PortworxVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


