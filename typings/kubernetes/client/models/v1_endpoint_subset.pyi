"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1EndpointSubset:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, addresses=..., not_ready_addresses=..., ports=..., local_vars_configuration=...) -> None:
        """V1EndpointSubset - a model defined in OpenAPI"""
        ...
    
    @property
    def addresses(self): # -> None:
        """Gets the addresses of this V1EndpointSubset.  # noqa: E501

        IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.  # noqa: E501

        :return: The addresses of this V1EndpointSubset.  # noqa: E501
        :rtype: list[V1EndpointAddress]
        """
        ...
    
    @addresses.setter
    def addresses(self, addresses): # -> None:
        """Sets the addresses of this V1EndpointSubset.

        IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.  # noqa: E501

        :param addresses: The addresses of this V1EndpointSubset.  # noqa: E501
        :type: list[V1EndpointAddress]
        """
        ...
    
    @property
    def not_ready_addresses(self): # -> None:
        """Gets the not_ready_addresses of this V1EndpointSubset.  # noqa: E501

        IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.  # noqa: E501

        :return: The not_ready_addresses of this V1EndpointSubset.  # noqa: E501
        :rtype: list[V1EndpointAddress]
        """
        ...
    
    @not_ready_addresses.setter
    def not_ready_addresses(self, not_ready_addresses): # -> None:
        """Sets the not_ready_addresses of this V1EndpointSubset.

        IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.  # noqa: E501

        :param not_ready_addresses: The not_ready_addresses of this V1EndpointSubset.  # noqa: E501
        :type: list[V1EndpointAddress]
        """
        ...
    
    @property
    def ports(self): # -> None:
        """Gets the ports of this V1EndpointSubset.  # noqa: E501

        Port numbers available on the related IP addresses.  # noqa: E501

        :return: The ports of this V1EndpointSubset.  # noqa: E501
        :rtype: list[CoreV1EndpointPort]
        """
        ...
    
    @ports.setter
    def ports(self, ports): # -> None:
        """Sets the ports of this V1EndpointSubset.

        Port numbers available on the related IP addresses.  # noqa: E501

        :param ports: The ports of this V1EndpointSubset.  # noqa: E501
        :type: list[CoreV1EndpointPort]
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


