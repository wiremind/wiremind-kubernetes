"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1beta1Subject:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, group=..., kind=..., service_account=..., user=..., local_vars_configuration=...) -> None:
        """V1beta1Subject - a model defined in OpenAPI"""
        ...
    
    @property
    def group(self): # -> None:
        """Gets the group of this V1beta1Subject.  # noqa: E501


        :return: The group of this V1beta1Subject.  # noqa: E501
        :rtype: V1beta1GroupSubject
        """
        ...
    
    @group.setter
    def group(self, group): # -> None:
        """Sets the group of this V1beta1Subject.


        :param group: The group of this V1beta1Subject.  # noqa: E501
        :type: V1beta1GroupSubject
        """
        ...
    
    @property
    def kind(self): # -> None:
        """Gets the kind of this V1beta1Subject.  # noqa: E501

        `kind` indicates which one of the other fields is non-empty. Required  # noqa: E501

        :return: The kind of this V1beta1Subject.  # noqa: E501
        :rtype: str
        """
        ...
    
    @kind.setter
    def kind(self, kind): # -> None:
        """Sets the kind of this V1beta1Subject.

        `kind` indicates which one of the other fields is non-empty. Required  # noqa: E501

        :param kind: The kind of this V1beta1Subject.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def service_account(self): # -> None:
        """Gets the service_account of this V1beta1Subject.  # noqa: E501


        :return: The service_account of this V1beta1Subject.  # noqa: E501
        :rtype: V1beta1ServiceAccountSubject
        """
        ...
    
    @service_account.setter
    def service_account(self, service_account): # -> None:
        """Sets the service_account of this V1beta1Subject.


        :param service_account: The service_account of this V1beta1Subject.  # noqa: E501
        :type: V1beta1ServiceAccountSubject
        """
        ...
    
    @property
    def user(self): # -> None:
        """Gets the user of this V1beta1Subject.  # noqa: E501


        :return: The user of this V1beta1Subject.  # noqa: E501
        :rtype: V1beta1UserSubject
        """
        ...
    
    @user.setter
    def user(self, user): # -> None:
        """Sets the user of this V1beta1Subject.


        :param user: The user of this V1beta1Subject.  # noqa: E501
        :type: V1beta1UserSubject
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


