"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1Taint:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, effect=..., key=..., time_added=..., value=..., local_vars_configuration=...) -> None:
        """V1Taint - a model defined in OpenAPI"""
        ...
    
    @property
    def effect(self): # -> None:
        """Gets the effect of this V1Taint.  # noqa: E501

        Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.    # noqa: E501

        :return: The effect of this V1Taint.  # noqa: E501
        :rtype: str
        """
        ...
    
    @effect.setter
    def effect(self, effect): # -> None:
        """Sets the effect of this V1Taint.

        Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.    # noqa: E501

        :param effect: The effect of this V1Taint.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def key(self): # -> None:
        """Gets the key of this V1Taint.  # noqa: E501

        Required. The taint key to be applied to a node.  # noqa: E501

        :return: The key of this V1Taint.  # noqa: E501
        :rtype: str
        """
        ...
    
    @key.setter
    def key(self, key): # -> None:
        """Sets the key of this V1Taint.

        Required. The taint key to be applied to a node.  # noqa: E501

        :param key: The key of this V1Taint.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def time_added(self): # -> None:
        """Gets the time_added of this V1Taint.  # noqa: E501

        TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.  # noqa: E501

        :return: The time_added of this V1Taint.  # noqa: E501
        :rtype: datetime
        """
        ...
    
    @time_added.setter
    def time_added(self, time_added): # -> None:
        """Sets the time_added of this V1Taint.

        TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.  # noqa: E501

        :param time_added: The time_added of this V1Taint.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def value(self): # -> None:
        """Gets the value of this V1Taint.  # noqa: E501

        The taint value corresponding to the taint key.  # noqa: E501

        :return: The value of this V1Taint.  # noqa: E501
        :rtype: str
        """
        ...
    
    @value.setter
    def value(self, value): # -> None:
        """Sets the value of this V1Taint.

        The taint value corresponding to the taint key.  # noqa: E501

        :param value: The value of this V1Taint.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


