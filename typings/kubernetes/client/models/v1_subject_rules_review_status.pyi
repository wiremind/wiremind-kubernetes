"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1SubjectRulesReviewStatus:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, evaluation_error=..., incomplete=..., non_resource_rules=..., resource_rules=..., local_vars_configuration=...) -> None:
        """V1SubjectRulesReviewStatus - a model defined in OpenAPI"""
        ...
    
    @property
    def evaluation_error(self): # -> None:
        """Gets the evaluation_error of this V1SubjectRulesReviewStatus.  # noqa: E501

        EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.  # noqa: E501

        :return: The evaluation_error of this V1SubjectRulesReviewStatus.  # noqa: E501
        :rtype: str
        """
        ...
    
    @evaluation_error.setter
    def evaluation_error(self, evaluation_error): # -> None:
        """Sets the evaluation_error of this V1SubjectRulesReviewStatus.

        EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.  # noqa: E501

        :param evaluation_error: The evaluation_error of this V1SubjectRulesReviewStatus.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def incomplete(self): # -> None:
        """Gets the incomplete of this V1SubjectRulesReviewStatus.  # noqa: E501

        Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.  # noqa: E501

        :return: The incomplete of this V1SubjectRulesReviewStatus.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @incomplete.setter
    def incomplete(self, incomplete): # -> None:
        """Sets the incomplete of this V1SubjectRulesReviewStatus.

        Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.  # noqa: E501

        :param incomplete: The incomplete of this V1SubjectRulesReviewStatus.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def non_resource_rules(self): # -> None:
        """Gets the non_resource_rules of this V1SubjectRulesReviewStatus.  # noqa: E501

        NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.  # noqa: E501

        :return: The non_resource_rules of this V1SubjectRulesReviewStatus.  # noqa: E501
        :rtype: list[V1NonResourceRule]
        """
        ...
    
    @non_resource_rules.setter
    def non_resource_rules(self, non_resource_rules): # -> None:
        """Sets the non_resource_rules of this V1SubjectRulesReviewStatus.

        NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.  # noqa: E501

        :param non_resource_rules: The non_resource_rules of this V1SubjectRulesReviewStatus.  # noqa: E501
        :type: list[V1NonResourceRule]
        """
        ...
    
    @property
    def resource_rules(self): # -> None:
        """Gets the resource_rules of this V1SubjectRulesReviewStatus.  # noqa: E501

        ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.  # noqa: E501

        :return: The resource_rules of this V1SubjectRulesReviewStatus.  # noqa: E501
        :rtype: list[V1ResourceRule]
        """
        ...
    
    @resource_rules.setter
    def resource_rules(self, resource_rules): # -> None:
        """Sets the resource_rules of this V1SubjectRulesReviewStatus.

        ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.  # noqa: E501

        :param resource_rules: The resource_rules of this V1SubjectRulesReviewStatus.  # noqa: E501
        :type: list[V1ResourceRule]
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


