"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1ScaleIOVolumeSource:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, fs_type=..., gateway=..., protection_domain=..., read_only=..., secret_ref=..., ssl_enabled=..., storage_mode=..., storage_pool=..., system=..., volume_name=..., local_vars_configuration=...) -> None:
        """V1ScaleIOVolumeSource - a model defined in OpenAPI"""
        ...
    
    @property
    def fs_type(self): # -> None:
        """Gets the fs_type of this V1ScaleIOVolumeSource.  # noqa: E501

        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".  # noqa: E501

        :return: The fs_type of this V1ScaleIOVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @fs_type.setter
    def fs_type(self, fs_type): # -> None:
        """Sets the fs_type of this V1ScaleIOVolumeSource.

        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".  # noqa: E501

        :param fs_type: The fs_type of this V1ScaleIOVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def gateway(self): # -> None:
        """Gets the gateway of this V1ScaleIOVolumeSource.  # noqa: E501

        gateway is the host address of the ScaleIO API Gateway.  # noqa: E501

        :return: The gateway of this V1ScaleIOVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @gateway.setter
    def gateway(self, gateway): # -> None:
        """Sets the gateway of this V1ScaleIOVolumeSource.

        gateway is the host address of the ScaleIO API Gateway.  # noqa: E501

        :param gateway: The gateway of this V1ScaleIOVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def protection_domain(self): # -> None:
        """Gets the protection_domain of this V1ScaleIOVolumeSource.  # noqa: E501

        protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.  # noqa: E501

        :return: The protection_domain of this V1ScaleIOVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @protection_domain.setter
    def protection_domain(self, protection_domain): # -> None:
        """Sets the protection_domain of this V1ScaleIOVolumeSource.

        protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.  # noqa: E501

        :param protection_domain: The protection_domain of this V1ScaleIOVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def read_only(self): # -> None:
        """Gets the read_only of this V1ScaleIOVolumeSource.  # noqa: E501

        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  # noqa: E501

        :return: The read_only of this V1ScaleIOVolumeSource.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @read_only.setter
    def read_only(self, read_only): # -> None:
        """Sets the read_only of this V1ScaleIOVolumeSource.

        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  # noqa: E501

        :param read_only: The read_only of this V1ScaleIOVolumeSource.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def secret_ref(self): # -> None:
        """Gets the secret_ref of this V1ScaleIOVolumeSource.  # noqa: E501


        :return: The secret_ref of this V1ScaleIOVolumeSource.  # noqa: E501
        :rtype: V1LocalObjectReference
        """
        ...
    
    @secret_ref.setter
    def secret_ref(self, secret_ref): # -> None:
        """Sets the secret_ref of this V1ScaleIOVolumeSource.


        :param secret_ref: The secret_ref of this V1ScaleIOVolumeSource.  # noqa: E501
        :type: V1LocalObjectReference
        """
        ...
    
    @property
    def ssl_enabled(self): # -> None:
        """Gets the ssl_enabled of this V1ScaleIOVolumeSource.  # noqa: E501

        sslEnabled Flag enable/disable SSL communication with Gateway, default false  # noqa: E501

        :return: The ssl_enabled of this V1ScaleIOVolumeSource.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @ssl_enabled.setter
    def ssl_enabled(self, ssl_enabled): # -> None:
        """Sets the ssl_enabled of this V1ScaleIOVolumeSource.

        sslEnabled Flag enable/disable SSL communication with Gateway, default false  # noqa: E501

        :param ssl_enabled: The ssl_enabled of this V1ScaleIOVolumeSource.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def storage_mode(self): # -> None:
        """Gets the storage_mode of this V1ScaleIOVolumeSource.  # noqa: E501

        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.  # noqa: E501

        :return: The storage_mode of this V1ScaleIOVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @storage_mode.setter
    def storage_mode(self, storage_mode): # -> None:
        """Sets the storage_mode of this V1ScaleIOVolumeSource.

        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.  # noqa: E501

        :param storage_mode: The storage_mode of this V1ScaleIOVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def storage_pool(self): # -> None:
        """Gets the storage_pool of this V1ScaleIOVolumeSource.  # noqa: E501

        storagePool is the ScaleIO Storage Pool associated with the protection domain.  # noqa: E501

        :return: The storage_pool of this V1ScaleIOVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @storage_pool.setter
    def storage_pool(self, storage_pool): # -> None:
        """Sets the storage_pool of this V1ScaleIOVolumeSource.

        storagePool is the ScaleIO Storage Pool associated with the protection domain.  # noqa: E501

        :param storage_pool: The storage_pool of this V1ScaleIOVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def system(self): # -> None:
        """Gets the system of this V1ScaleIOVolumeSource.  # noqa: E501

        system is the name of the storage system as configured in ScaleIO.  # noqa: E501

        :return: The system of this V1ScaleIOVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @system.setter
    def system(self, system): # -> None:
        """Sets the system of this V1ScaleIOVolumeSource.

        system is the name of the storage system as configured in ScaleIO.  # noqa: E501

        :param system: The system of this V1ScaleIOVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def volume_name(self): # -> None:
        """Gets the volume_name of this V1ScaleIOVolumeSource.  # noqa: E501

        volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.  # noqa: E501

        :return: The volume_name of this V1ScaleIOVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @volume_name.setter
    def volume_name(self, volume_name): # -> None:
        """Sets the volume_name of this V1ScaleIOVolumeSource.

        volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.  # noqa: E501

        :param volume_name: The volume_name of this V1ScaleIOVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


