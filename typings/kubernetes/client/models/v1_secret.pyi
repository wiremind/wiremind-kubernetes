"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1Secret:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, api_version=..., data=..., immutable=..., kind=..., metadata=..., string_data=..., type=..., local_vars_configuration=...) -> None:
        """V1Secret - a model defined in OpenAPI"""
        ...
    
    @property
    def api_version(self): # -> None:
        """Gets the api_version of this V1Secret.  # noqa: E501

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this V1Secret.  # noqa: E501
        :rtype: str
        """
        ...
    
    @api_version.setter
    def api_version(self, api_version): # -> None:
        """Sets the api_version of this V1Secret.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this V1Secret.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def data(self): # -> None:
        """Gets the data of this V1Secret.  # noqa: E501

        Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4  # noqa: E501

        :return: The data of this V1Secret.  # noqa: E501
        :rtype: dict(str, str)
        """
        ...
    
    @data.setter
    def data(self, data): # -> None:
        """Sets the data of this V1Secret.

        Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4  # noqa: E501

        :param data: The data of this V1Secret.  # noqa: E501
        :type: dict(str, str)
        """
        ...
    
    @property
    def immutable(self): # -> None:
        """Gets the immutable of this V1Secret.  # noqa: E501

        Immutable, if set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil.  # noqa: E501

        :return: The immutable of this V1Secret.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @immutable.setter
    def immutable(self, immutable): # -> None:
        """Sets the immutable of this V1Secret.

        Immutable, if set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil.  # noqa: E501

        :param immutable: The immutable of this V1Secret.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def kind(self): # -> None:
        """Gets the kind of this V1Secret.  # noqa: E501

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this V1Secret.  # noqa: E501
        :rtype: str
        """
        ...
    
    @kind.setter
    def kind(self, kind): # -> None:
        """Sets the kind of this V1Secret.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this V1Secret.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def metadata(self): # -> None:
        """Gets the metadata of this V1Secret.  # noqa: E501


        :return: The metadata of this V1Secret.  # noqa: E501
        :rtype: V1ObjectMeta
        """
        ...
    
    @metadata.setter
    def metadata(self, metadata): # -> None:
        """Sets the metadata of this V1Secret.


        :param metadata: The metadata of this V1Secret.  # noqa: E501
        :type: V1ObjectMeta
        """
        ...
    
    @property
    def string_data(self): # -> None:
        """Gets the string_data of this V1Secret.  # noqa: E501

        stringData allows specifying non-binary secret data in string form. It is provided as a write-only input field for convenience. All keys and values are merged into the data field on write, overwriting any existing values. The stringData field is never output when reading from the API.  # noqa: E501

        :return: The string_data of this V1Secret.  # noqa: E501
        :rtype: dict(str, str)
        """
        ...
    
    @string_data.setter
    def string_data(self, string_data): # -> None:
        """Sets the string_data of this V1Secret.

        stringData allows specifying non-binary secret data in string form. It is provided as a write-only input field for convenience. All keys and values are merged into the data field on write, overwriting any existing values. The stringData field is never output when reading from the API.  # noqa: E501

        :param string_data: The string_data of this V1Secret.  # noqa: E501
        :type: dict(str, str)
        """
        ...
    
    @property
    def type(self): # -> None:
        """Gets the type of this V1Secret.  # noqa: E501

        Used to facilitate programmatic handling of secret data. More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types  # noqa: E501

        :return: The type of this V1Secret.  # noqa: E501
        :rtype: str
        """
        ...
    
    @type.setter
    def type(self, type): # -> None:
        """Sets the type of this V1Secret.

        Used to facilitate programmatic handling of secret data. More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types  # noqa: E501

        :param type: The type of this V1Secret.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


