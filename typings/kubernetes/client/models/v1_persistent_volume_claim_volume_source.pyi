"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1PersistentVolumeClaimVolumeSource:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, claim_name=..., read_only=..., local_vars_configuration=...) -> None:
        """V1PersistentVolumeClaimVolumeSource - a model defined in OpenAPI"""
        ...
    
    @property
    def claim_name(self): # -> None:
        """Gets the claim_name of this V1PersistentVolumeClaimVolumeSource.  # noqa: E501

        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims  # noqa: E501

        :return: The claim_name of this V1PersistentVolumeClaimVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @claim_name.setter
    def claim_name(self, claim_name): # -> None:
        """Sets the claim_name of this V1PersistentVolumeClaimVolumeSource.

        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims  # noqa: E501

        :param claim_name: The claim_name of this V1PersistentVolumeClaimVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def read_only(self): # -> None:
        """Gets the read_only of this V1PersistentVolumeClaimVolumeSource.  # noqa: E501

        readOnly Will force the ReadOnly setting in VolumeMounts. Default false.  # noqa: E501

        :return: The read_only of this V1PersistentVolumeClaimVolumeSource.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @read_only.setter
    def read_only(self, read_only): # -> None:
        """Sets the read_only of this V1PersistentVolumeClaimVolumeSource.

        readOnly Will force the ReadOnly setting in VolumeMounts. Default false.  # noqa: E501

        :param read_only: The read_only of this V1PersistentVolumeClaimVolumeSource.  # noqa: E501
        :type: bool
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


