"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1VolumeMount:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, mount_path=..., mount_propagation=..., name=..., read_only=..., sub_path=..., sub_path_expr=..., local_vars_configuration=...) -> None:
        """V1VolumeMount - a model defined in OpenAPI"""
        ...
    
    @property
    def mount_path(self): # -> None:
        """Gets the mount_path of this V1VolumeMount.  # noqa: E501

        Path within the container at which the volume should be mounted.  Must not contain ':'.  # noqa: E501

        :return: The mount_path of this V1VolumeMount.  # noqa: E501
        :rtype: str
        """
        ...
    
    @mount_path.setter
    def mount_path(self, mount_path): # -> None:
        """Sets the mount_path of this V1VolumeMount.

        Path within the container at which the volume should be mounted.  Must not contain ':'.  # noqa: E501

        :param mount_path: The mount_path of this V1VolumeMount.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def mount_propagation(self): # -> None:
        """Gets the mount_propagation of this V1VolumeMount.  # noqa: E501

        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.  # noqa: E501

        :return: The mount_propagation of this V1VolumeMount.  # noqa: E501
        :rtype: str
        """
        ...
    
    @mount_propagation.setter
    def mount_propagation(self, mount_propagation): # -> None:
        """Sets the mount_propagation of this V1VolumeMount.

        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.  # noqa: E501

        :param mount_propagation: The mount_propagation of this V1VolumeMount.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def name(self): # -> None:
        """Gets the name of this V1VolumeMount.  # noqa: E501

        This must match the Name of a Volume.  # noqa: E501

        :return: The name of this V1VolumeMount.  # noqa: E501
        :rtype: str
        """
        ...
    
    @name.setter
    def name(self, name): # -> None:
        """Sets the name of this V1VolumeMount.

        This must match the Name of a Volume.  # noqa: E501

        :param name: The name of this V1VolumeMount.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def read_only(self): # -> None:
        """Gets the read_only of this V1VolumeMount.  # noqa: E501

        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.  # noqa: E501

        :return: The read_only of this V1VolumeMount.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @read_only.setter
    def read_only(self, read_only): # -> None:
        """Sets the read_only of this V1VolumeMount.

        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.  # noqa: E501

        :param read_only: The read_only of this V1VolumeMount.  # noqa: E501
        :type: bool
        """
        ...
    
    @property
    def sub_path(self): # -> None:
        """Gets the sub_path of this V1VolumeMount.  # noqa: E501

        Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).  # noqa: E501

        :return: The sub_path of this V1VolumeMount.  # noqa: E501
        :rtype: str
        """
        ...
    
    @sub_path.setter
    def sub_path(self, sub_path): # -> None:
        """Sets the sub_path of this V1VolumeMount.

        Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).  # noqa: E501

        :param sub_path: The sub_path of this V1VolumeMount.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def sub_path_expr(self): # -> None:
        """Gets the sub_path_expr of this V1VolumeMount.  # noqa: E501

        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.  # noqa: E501

        :return: The sub_path_expr of this V1VolumeMount.  # noqa: E501
        :rtype: str
        """
        ...
    
    @sub_path_expr.setter
    def sub_path_expr(self, sub_path_expr): # -> None:
        """Sets the sub_path_expr of this V1VolumeMount.

        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.  # noqa: E501

        :param sub_path_expr: The sub_path_expr of this V1VolumeMount.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


