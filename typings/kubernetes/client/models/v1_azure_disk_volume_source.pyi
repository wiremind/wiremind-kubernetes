"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1AzureDiskVolumeSource:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, caching_mode=..., disk_name=..., disk_uri=..., fs_type=..., kind=..., read_only=..., local_vars_configuration=...) -> None:
        """V1AzureDiskVolumeSource - a model defined in OpenAPI"""
        ...
    
    @property
    def caching_mode(self): # -> None:
        """Gets the caching_mode of this V1AzureDiskVolumeSource.  # noqa: E501

        cachingMode is the Host Caching mode: None, Read Only, Read Write.  # noqa: E501

        :return: The caching_mode of this V1AzureDiskVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @caching_mode.setter
    def caching_mode(self, caching_mode): # -> None:
        """Sets the caching_mode of this V1AzureDiskVolumeSource.

        cachingMode is the Host Caching mode: None, Read Only, Read Write.  # noqa: E501

        :param caching_mode: The caching_mode of this V1AzureDiskVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def disk_name(self): # -> None:
        """Gets the disk_name of this V1AzureDiskVolumeSource.  # noqa: E501

        diskName is the Name of the data disk in the blob storage  # noqa: E501

        :return: The disk_name of this V1AzureDiskVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @disk_name.setter
    def disk_name(self, disk_name): # -> None:
        """Sets the disk_name of this V1AzureDiskVolumeSource.

        diskName is the Name of the data disk in the blob storage  # noqa: E501

        :param disk_name: The disk_name of this V1AzureDiskVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def disk_uri(self): # -> None:
        """Gets the disk_uri of this V1AzureDiskVolumeSource.  # noqa: E501

        diskURI is the URI of data disk in the blob storage  # noqa: E501

        :return: The disk_uri of this V1AzureDiskVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @disk_uri.setter
    def disk_uri(self, disk_uri): # -> None:
        """Sets the disk_uri of this V1AzureDiskVolumeSource.

        diskURI is the URI of data disk in the blob storage  # noqa: E501

        :param disk_uri: The disk_uri of this V1AzureDiskVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def fs_type(self): # -> None:
        """Gets the fs_type of this V1AzureDiskVolumeSource.  # noqa: E501

        fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.  # noqa: E501

        :return: The fs_type of this V1AzureDiskVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @fs_type.setter
    def fs_type(self, fs_type): # -> None:
        """Sets the fs_type of this V1AzureDiskVolumeSource.

        fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.  # noqa: E501

        :param fs_type: The fs_type of this V1AzureDiskVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def kind(self): # -> None:
        """Gets the kind of this V1AzureDiskVolumeSource.  # noqa: E501

        kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared  # noqa: E501

        :return: The kind of this V1AzureDiskVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @kind.setter
    def kind(self, kind): # -> None:
        """Sets the kind of this V1AzureDiskVolumeSource.

        kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared  # noqa: E501

        :param kind: The kind of this V1AzureDiskVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def read_only(self): # -> None:
        """Gets the read_only of this V1AzureDiskVolumeSource.  # noqa: E501

        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  # noqa: E501

        :return: The read_only of this V1AzureDiskVolumeSource.  # noqa: E501
        :rtype: bool
        """
        ...
    
    @read_only.setter
    def read_only(self, read_only): # -> None:
        """Sets the read_only of this V1AzureDiskVolumeSource.

        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.  # noqa: E501

        :param read_only: The read_only of this V1AzureDiskVolumeSource.  # noqa: E501
        :type: bool
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


