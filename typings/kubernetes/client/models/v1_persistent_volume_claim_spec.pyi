"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1PersistentVolumeClaimSpec:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, access_modes=..., data_source=..., data_source_ref=..., resources=..., selector=..., storage_class_name=..., volume_mode=..., volume_name=..., local_vars_configuration=...) -> None:
        """V1PersistentVolumeClaimSpec - a model defined in OpenAPI"""
        ...
    
    @property
    def access_modes(self): # -> None:
        """Gets the access_modes of this V1PersistentVolumeClaimSpec.  # noqa: E501

        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1  # noqa: E501

        :return: The access_modes of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :rtype: list[str]
        """
        ...
    
    @access_modes.setter
    def access_modes(self, access_modes): # -> None:
        """Sets the access_modes of this V1PersistentVolumeClaimSpec.

        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1  # noqa: E501

        :param access_modes: The access_modes of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :type: list[str]
        """
        ...
    
    @property
    def data_source(self): # -> None:
        """Gets the data_source of this V1PersistentVolumeClaimSpec.  # noqa: E501


        :return: The data_source of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :rtype: V1TypedLocalObjectReference
        """
        ...
    
    @data_source.setter
    def data_source(self, data_source): # -> None:
        """Sets the data_source of this V1PersistentVolumeClaimSpec.


        :param data_source: The data_source of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :type: V1TypedLocalObjectReference
        """
        ...
    
    @property
    def data_source_ref(self): # -> None:
        """Gets the data_source_ref of this V1PersistentVolumeClaimSpec.  # noqa: E501


        :return: The data_source_ref of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :rtype: V1TypedLocalObjectReference
        """
        ...
    
    @data_source_ref.setter
    def data_source_ref(self, data_source_ref): # -> None:
        """Sets the data_source_ref of this V1PersistentVolumeClaimSpec.


        :param data_source_ref: The data_source_ref of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :type: V1TypedLocalObjectReference
        """
        ...
    
    @property
    def resources(self): # -> None:
        """Gets the resources of this V1PersistentVolumeClaimSpec.  # noqa: E501


        :return: The resources of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :rtype: V1ResourceRequirements
        """
        ...
    
    @resources.setter
    def resources(self, resources): # -> None:
        """Sets the resources of this V1PersistentVolumeClaimSpec.


        :param resources: The resources of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :type: V1ResourceRequirements
        """
        ...
    
    @property
    def selector(self): # -> None:
        """Gets the selector of this V1PersistentVolumeClaimSpec.  # noqa: E501


        :return: The selector of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :rtype: V1LabelSelector
        """
        ...
    
    @selector.setter
    def selector(self, selector): # -> None:
        """Sets the selector of this V1PersistentVolumeClaimSpec.


        :param selector: The selector of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :type: V1LabelSelector
        """
        ...
    
    @property
    def storage_class_name(self): # -> None:
        """Gets the storage_class_name of this V1PersistentVolumeClaimSpec.  # noqa: E501

        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1  # noqa: E501

        :return: The storage_class_name of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :rtype: str
        """
        ...
    
    @storage_class_name.setter
    def storage_class_name(self, storage_class_name): # -> None:
        """Sets the storage_class_name of this V1PersistentVolumeClaimSpec.

        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1  # noqa: E501

        :param storage_class_name: The storage_class_name of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def volume_mode(self): # -> None:
        """Gets the volume_mode of this V1PersistentVolumeClaimSpec.  # noqa: E501

        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.  # noqa: E501

        :return: The volume_mode of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :rtype: str
        """
        ...
    
    @volume_mode.setter
    def volume_mode(self, volume_mode): # -> None:
        """Sets the volume_mode of this V1PersistentVolumeClaimSpec.

        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.  # noqa: E501

        :param volume_mode: The volume_mode of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def volume_name(self): # -> None:
        """Gets the volume_name of this V1PersistentVolumeClaimSpec.  # noqa: E501

        volumeName is the binding reference to the PersistentVolume backing this claim.  # noqa: E501

        :return: The volume_name of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :rtype: str
        """
        ...
    
    @volume_name.setter
    def volume_name(self, volume_name): # -> None:
        """Sets the volume_name of this V1PersistentVolumeClaimSpec.

        volumeName is the binding reference to the PersistentVolume backing this claim.  # noqa: E501

        :param volume_name: The volume_name of this V1PersistentVolumeClaimSpec.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


