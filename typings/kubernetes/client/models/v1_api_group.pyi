"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1APIGroup:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, api_version=..., kind=..., name=..., preferred_version=..., server_address_by_client_cid_rs=..., versions=..., local_vars_configuration=...) -> None:
        """V1APIGroup - a model defined in OpenAPI"""
        ...
    
    @property
    def api_version(self): # -> None:
        """Gets the api_version of this V1APIGroup.  # noqa: E501

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this V1APIGroup.  # noqa: E501
        :rtype: str
        """
        ...
    
    @api_version.setter
    def api_version(self, api_version): # -> None:
        """Sets the api_version of this V1APIGroup.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this V1APIGroup.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def kind(self): # -> None:
        """Gets the kind of this V1APIGroup.  # noqa: E501

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this V1APIGroup.  # noqa: E501
        :rtype: str
        """
        ...
    
    @kind.setter
    def kind(self, kind): # -> None:
        """Sets the kind of this V1APIGroup.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this V1APIGroup.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def name(self): # -> None:
        """Gets the name of this V1APIGroup.  # noqa: E501

        name is the name of the group.  # noqa: E501

        :return: The name of this V1APIGroup.  # noqa: E501
        :rtype: str
        """
        ...
    
    @name.setter
    def name(self, name): # -> None:
        """Sets the name of this V1APIGroup.

        name is the name of the group.  # noqa: E501

        :param name: The name of this V1APIGroup.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def preferred_version(self): # -> None:
        """Gets the preferred_version of this V1APIGroup.  # noqa: E501


        :return: The preferred_version of this V1APIGroup.  # noqa: E501
        :rtype: V1GroupVersionForDiscovery
        """
        ...
    
    @preferred_version.setter
    def preferred_version(self, preferred_version): # -> None:
        """Sets the preferred_version of this V1APIGroup.


        :param preferred_version: The preferred_version of this V1APIGroup.  # noqa: E501
        :type: V1GroupVersionForDiscovery
        """
        ...
    
    @property
    def server_address_by_client_cid_rs(self): # -> None:
        """Gets the server_address_by_client_cid_rs of this V1APIGroup.  # noqa: E501

        a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.  # noqa: E501

        :return: The server_address_by_client_cid_rs of this V1APIGroup.  # noqa: E501
        :rtype: list[V1ServerAddressByClientCIDR]
        """
        ...
    
    @server_address_by_client_cid_rs.setter
    def server_address_by_client_cid_rs(self, server_address_by_client_cid_rs): # -> None:
        """Sets the server_address_by_client_cid_rs of this V1APIGroup.

        a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.  # noqa: E501

        :param server_address_by_client_cid_rs: The server_address_by_client_cid_rs of this V1APIGroup.  # noqa: E501
        :type: list[V1ServerAddressByClientCIDR]
        """
        ...
    
    @property
    def versions(self): # -> None:
        """Gets the versions of this V1APIGroup.  # noqa: E501

        versions are the versions supported in this group.  # noqa: E501

        :return: The versions of this V1APIGroup.  # noqa: E501
        :rtype: list[V1GroupVersionForDiscovery]
        """
        ...
    
    @versions.setter
    def versions(self, versions): # -> None:
        """Sets the versions of this V1APIGroup.

        versions are the versions supported in this group.  # noqa: E501

        :param versions: The versions of this V1APIGroup.  # noqa: E501
        :type: list[V1GroupVersionForDiscovery]
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


