"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1WatchEvent:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, object=..., type=..., local_vars_configuration=...) -> None:
        """V1WatchEvent - a model defined in OpenAPI"""
        ...
    
    @property
    def object(self): # -> None:
        """Gets the object of this V1WatchEvent.  # noqa: E501

        Object is:  * If Type is Added or Modified: the new state of the object.  * If Type is Deleted: the state of the object immediately before deletion.  * If Type is Error: *Status is recommended; other types may make sense    depending on context.  # noqa: E501

        :return: The object of this V1WatchEvent.  # noqa: E501
        :rtype: object
        """
        ...
    
    @object.setter
    def object(self, object): # -> None:
        """Sets the object of this V1WatchEvent.

        Object is:  * If Type is Added or Modified: the new state of the object.  * If Type is Deleted: the state of the object immediately before deletion.  * If Type is Error: *Status is recommended; other types may make sense    depending on context.  # noqa: E501

        :param object: The object of this V1WatchEvent.  # noqa: E501
        :type: object
        """
        ...
    
    @property
    def type(self): # -> None:
        """Gets the type of this V1WatchEvent.  # noqa: E501


        :return: The type of this V1WatchEvent.  # noqa: E501
        :rtype: str
        """
        ...
    
    @type.setter
    def type(self, type): # -> None:
        """Sets the type of this V1WatchEvent.


        :param type: The type of this V1WatchEvent.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


