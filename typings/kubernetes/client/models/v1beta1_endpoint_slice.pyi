"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1beta1EndpointSlice:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, address_type=..., api_version=..., endpoints=..., kind=..., metadata=..., ports=..., local_vars_configuration=...) -> None:
        """V1beta1EndpointSlice - a model defined in OpenAPI"""
        ...
    
    @property
    def address_type(self): # -> None:
        """Gets the address_type of this V1beta1EndpointSlice.  # noqa: E501

        addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.  # noqa: E501

        :return: The address_type of this V1beta1EndpointSlice.  # noqa: E501
        :rtype: str
        """
        ...
    
    @address_type.setter
    def address_type(self, address_type): # -> None:
        """Sets the address_type of this V1beta1EndpointSlice.

        addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.  # noqa: E501

        :param address_type: The address_type of this V1beta1EndpointSlice.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def api_version(self): # -> None:
        """Gets the api_version of this V1beta1EndpointSlice.  # noqa: E501

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this V1beta1EndpointSlice.  # noqa: E501
        :rtype: str
        """
        ...
    
    @api_version.setter
    def api_version(self, api_version): # -> None:
        """Sets the api_version of this V1beta1EndpointSlice.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this V1beta1EndpointSlice.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def endpoints(self): # -> None:
        """Gets the endpoints of this V1beta1EndpointSlice.  # noqa: E501

        endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.  # noqa: E501

        :return: The endpoints of this V1beta1EndpointSlice.  # noqa: E501
        :rtype: list[V1beta1Endpoint]
        """
        ...
    
    @endpoints.setter
    def endpoints(self, endpoints): # -> None:
        """Sets the endpoints of this V1beta1EndpointSlice.

        endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.  # noqa: E501

        :param endpoints: The endpoints of this V1beta1EndpointSlice.  # noqa: E501
        :type: list[V1beta1Endpoint]
        """
        ...
    
    @property
    def kind(self): # -> None:
        """Gets the kind of this V1beta1EndpointSlice.  # noqa: E501

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this V1beta1EndpointSlice.  # noqa: E501
        :rtype: str
        """
        ...
    
    @kind.setter
    def kind(self, kind): # -> None:
        """Sets the kind of this V1beta1EndpointSlice.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this V1beta1EndpointSlice.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def metadata(self): # -> None:
        """Gets the metadata of this V1beta1EndpointSlice.  # noqa: E501


        :return: The metadata of this V1beta1EndpointSlice.  # noqa: E501
        :rtype: V1ObjectMeta
        """
        ...
    
    @metadata.setter
    def metadata(self, metadata): # -> None:
        """Sets the metadata of this V1beta1EndpointSlice.


        :param metadata: The metadata of this V1beta1EndpointSlice.  # noqa: E501
        :type: V1ObjectMeta
        """
        ...
    
    @property
    def ports(self): # -> None:
        """Gets the ports of this V1beta1EndpointSlice.  # noqa: E501

        ports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates \"all ports\". Each slice may include a maximum of 100 ports.  # noqa: E501

        :return: The ports of this V1beta1EndpointSlice.  # noqa: E501
        :rtype: list[V1beta1EndpointPort]
        """
        ...
    
    @ports.setter
    def ports(self, ports): # -> None:
        """Sets the ports of this V1beta1EndpointSlice.

        ports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates \"all ports\". Each slice may include a maximum of 100 ports.  # noqa: E501

        :param ports: The ports of this V1beta1EndpointSlice.  # noqa: E501
        :type: list[V1beta1EndpointPort]
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


