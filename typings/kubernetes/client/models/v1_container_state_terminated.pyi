"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1ContainerStateTerminated:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, container_id=..., exit_code=..., finished_at=..., message=..., reason=..., signal=..., started_at=..., local_vars_configuration=...) -> None:
        """V1ContainerStateTerminated - a model defined in OpenAPI"""
        ...
    
    @property
    def container_id(self): # -> None:
        """Gets the container_id of this V1ContainerStateTerminated.  # noqa: E501

        Container's ID in the format '<type>://<container_id>'  # noqa: E501

        :return: The container_id of this V1ContainerStateTerminated.  # noqa: E501
        :rtype: str
        """
        ...
    
    @container_id.setter
    def container_id(self, container_id): # -> None:
        """Sets the container_id of this V1ContainerStateTerminated.

        Container's ID in the format '<type>://<container_id>'  # noqa: E501

        :param container_id: The container_id of this V1ContainerStateTerminated.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def exit_code(self): # -> None:
        """Gets the exit_code of this V1ContainerStateTerminated.  # noqa: E501

        Exit status from the last termination of the container  # noqa: E501

        :return: The exit_code of this V1ContainerStateTerminated.  # noqa: E501
        :rtype: int
        """
        ...
    
    @exit_code.setter
    def exit_code(self, exit_code): # -> None:
        """Sets the exit_code of this V1ContainerStateTerminated.

        Exit status from the last termination of the container  # noqa: E501

        :param exit_code: The exit_code of this V1ContainerStateTerminated.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def finished_at(self): # -> None:
        """Gets the finished_at of this V1ContainerStateTerminated.  # noqa: E501

        Time at which the container last terminated  # noqa: E501

        :return: The finished_at of this V1ContainerStateTerminated.  # noqa: E501
        :rtype: datetime
        """
        ...
    
    @finished_at.setter
    def finished_at(self, finished_at): # -> None:
        """Sets the finished_at of this V1ContainerStateTerminated.

        Time at which the container last terminated  # noqa: E501

        :param finished_at: The finished_at of this V1ContainerStateTerminated.  # noqa: E501
        :type: datetime
        """
        ...
    
    @property
    def message(self): # -> None:
        """Gets the message of this V1ContainerStateTerminated.  # noqa: E501

        Message regarding the last termination of the container  # noqa: E501

        :return: The message of this V1ContainerStateTerminated.  # noqa: E501
        :rtype: str
        """
        ...
    
    @message.setter
    def message(self, message): # -> None:
        """Sets the message of this V1ContainerStateTerminated.

        Message regarding the last termination of the container  # noqa: E501

        :param message: The message of this V1ContainerStateTerminated.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def reason(self): # -> None:
        """Gets the reason of this V1ContainerStateTerminated.  # noqa: E501

        (brief) reason from the last termination of the container  # noqa: E501

        :return: The reason of this V1ContainerStateTerminated.  # noqa: E501
        :rtype: str
        """
        ...
    
    @reason.setter
    def reason(self, reason): # -> None:
        """Sets the reason of this V1ContainerStateTerminated.

        (brief) reason from the last termination of the container  # noqa: E501

        :param reason: The reason of this V1ContainerStateTerminated.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def signal(self): # -> None:
        """Gets the signal of this V1ContainerStateTerminated.  # noqa: E501

        Signal from the last termination of the container  # noqa: E501

        :return: The signal of this V1ContainerStateTerminated.  # noqa: E501
        :rtype: int
        """
        ...
    
    @signal.setter
    def signal(self, signal): # -> None:
        """Sets the signal of this V1ContainerStateTerminated.

        Signal from the last termination of the container  # noqa: E501

        :param signal: The signal of this V1ContainerStateTerminated.  # noqa: E501
        :type: int
        """
        ...
    
    @property
    def started_at(self): # -> None:
        """Gets the started_at of this V1ContainerStateTerminated.  # noqa: E501

        Time at which previous execution of the container started  # noqa: E501

        :return: The started_at of this V1ContainerStateTerminated.  # noqa: E501
        :rtype: datetime
        """
        ...
    
    @started_at.setter
    def started_at(self, started_at): # -> None:
        """Sets the started_at of this V1ContainerStateTerminated.

        Time at which previous execution of the container started  # noqa: E501

        :param started_at: The started_at of this V1ContainerStateTerminated.  # noqa: E501
        :type: datetime
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


