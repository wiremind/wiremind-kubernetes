"""
This type stub file was generated by pyright.
"""

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.24
    Generated by: https://openapi-generator.tech
"""
class V1GitRepoVolumeSource:
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types = ...
    attribute_map = ...
    def __init__(self, directory=..., repository=..., revision=..., local_vars_configuration=...) -> None:
        """V1GitRepoVolumeSource - a model defined in OpenAPI"""
        ...
    
    @property
    def directory(self): # -> None:
        """Gets the directory of this V1GitRepoVolumeSource.  # noqa: E501

        directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.  # noqa: E501

        :return: The directory of this V1GitRepoVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @directory.setter
    def directory(self, directory): # -> None:
        """Sets the directory of this V1GitRepoVolumeSource.

        directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.  # noqa: E501

        :param directory: The directory of this V1GitRepoVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def repository(self): # -> None:
        """Gets the repository of this V1GitRepoVolumeSource.  # noqa: E501

        repository is the URL  # noqa: E501

        :return: The repository of this V1GitRepoVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @repository.setter
    def repository(self, repository): # -> None:
        """Sets the repository of this V1GitRepoVolumeSource.

        repository is the URL  # noqa: E501

        :param repository: The repository of this V1GitRepoVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    @property
    def revision(self): # -> None:
        """Gets the revision of this V1GitRepoVolumeSource.  # noqa: E501

        revision is the commit hash for the specified revision.  # noqa: E501

        :return: The revision of this V1GitRepoVolumeSource.  # noqa: E501
        :rtype: str
        """
        ...
    
    @revision.setter
    def revision(self, revision): # -> None:
        """Sets the revision of this V1GitRepoVolumeSource.

        revision is the commit hash for the specified revision.  # noqa: E501

        :param revision: The revision of this V1GitRepoVolumeSource.  # noqa: E501
        :type: str
        """
        ...
    
    def to_dict(self): # -> dict[Any, Any]:
        """Returns the model properties as a dict"""
        ...
    
    def to_str(self): # -> str:
        """Returns the string representation of the model"""
        ...
    
    def __repr__(self): # -> str:
        """For `print` and `pprint`"""
        ...
    
    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        ...
    
    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        ...
    


